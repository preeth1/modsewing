{"version":3,"sources":["images/title.svg","images/measurements/dressform.svg","images/measurements/shoulder.svg","images/measurements/neck.svg","images/measurements/waist.svg","images/measurements/frontLength.svg","images/measurements/side.svg","images/measurements/highHip.svg","images/measurements/highHipDepth.svg","images/measurements/lowHip.svg","images/measurements/lowHipDepth.svg","images/measurements/backLength.svg","images/measurements/figureLength.svg","images/measurements/figureBreadth.svg","images/measurements/crossFront.svg","images/measurements/crossBack.svg","images/measurements/bust.svg","images/measurements/underBust.svg","images/measurements/armhole.svg","constants.js","measurementHelpers.js","svgHelpers/drawing.js","slopers/darts.js","svgHelpers/elements.js","svgHelpers/pathMath.js","slopers/bodice.js","patternGenerators/printButtonHelpers.js","patternGenerators/generatePattern.js","measurementTutorial.js","history.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","a4","get_measurements","_ref","_ref$use_defaults","use_defaults","measurements","image","dressform","helpText","name","friendlyName","measurement","shoulder","neck","waist","frontLength","side","highHip","highHipDepth","lowHip","lowHipDepth","backLength","figureLength","figureBreadth","crossFront","crossBack","bust","underbust","armhole","_","each","entry","convertMeasurements","convertedMeasurements","createFrontBack","get","length","front","back","cross","cup","hip","high","low","depth","divideBy","arguments","undefined","find","isPositiveValidNumber","input","RegExp","test","brokePattern","error","absMovePen","end","command","x","y","absolute","drawAbsLine","drawAbsBez","control","calculateArmholeShoulderCenterFrontDart","Math","min","calculateWaistDart","waistMeasurement","lowHipMeasurement","waitLowHipDiff","max","joinPaths","path1","path2","concat","translatePath","path","translation","map","stroke","thisStroke","cloneDeep","translateStroke","strokePoint","translatedStroke","createPathElement","id","displayDimensions","pathElement","addPathToElement","centerAndScalePath","createFormattedPath","formattedPath","concatStrokes","strokeToAdd","react_default","a","createElement","d","vectorEffect","strokeWidth","fill","getHeight","raphael","pathBBox","height","getWidth","width","scaleFactor","calculateScaleFactor","reflectAboutXAxis","centeringString","transform","widthRatio","heightRatio","quadraticBezierLength","P0","P1","P2","ax","ay","bx","by","A","B","C","Sabc","sqrt","A_2","A_32","C_2","BA","log","calculateLineToLineIntersection","P3","path0","Object","toConsumableArray","intersectionPoint2D","intersect","shape","points","calculateLineToBezierIntersection","P4","calculateCoordAlongLine","newLength","originalHeight","originalWidth","originalLength","pow","fc","calculateFrontCoordinates","x0","y14","y0","x20","x19","y1","x13","y3","x16","y5","x18","y9","x10","y12","x14","y15","x8","y16","x9","y13","x5","y7","x3","y17","x1","y18","x2","y2","y4","x6","x11","y11","x12","y10","x15","y6","x17","y8","bc","calculateBackCoordinates","x7","x4","cm","waistDartWidth","shoulderDartWidth","sideDartWidth","highHipFromBottom","originalShoulderHeight","originalShoulderWidth","sideHeight","armholeCenterY","armholeBottomLength","shoulderBottomPoint","newShoulderLength","shoulderBottomDart","shoulderTopDart","_createCanvasElement","canvasWidth","canvasHeight","svg","document","getElementById","innerHTML","canvas","canvg","toDataURL","_initializeDoc","jsPDF","_addPreviewPage","doc","setTextColor","setFontSize","text","_calculatePatternPageInitialValues","numberHeightPages","ceil","numberWidthPages","topLeftX","topLeftY","_generatePatternPages","initialVals","pdfTitle","times","heightPage","widthPage","topLeftCoordinates","_calculateNewTopLeftCoordinates","addPage","addImage","_addPatternPage","save","GeneratePage","state","displayWidth","displayHeight","generatePathElement","sloperPath","_this","generatePath","frontPath","props","backPath","backPathWidth","getScaleFactor","calculatePathDimensions","setDisplayHeight","setState","PatternDisplayElement","clientWidth","clientHeight","forceUpdate","this","_this2","className","generatePattern_PrintButton","ref","Component","PrintButton","PrintButtonClicked","event","_this3","onClick","TutorialPage","measurementIndex","testMeasurements","measurementError","displayText","updateMeasurement","value","newMeasurement","parseFloat","updateTestMeasurement","advanceTutorial","newMeasurementIndex","handleChange","currentTarget","handleFocus","console","getCurrentMeasurement","handleNextClick","replace","oldTestMeasurement","handleBackClick","showFinishButton","showBackButton","generatePattern","history","onFocus","onChange","type","src","alt","createBrowserHistory","App","handleLogoClick","Router","titleImage","Route","exact","render","measurementTutorial","Boolean","window","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iHAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,ulBC2B3BC,GACD,GADCA,GAEF,IAGEC,GAAmB,SAAAC,GAA2B,IAAAC,EAAAD,EAAzBE,oBAAyB,IAAAD,KACjDE,EAAe,CACjB,CACIC,MAAOC,IACPC,SAAU,wTAEd,CACIC,KAAM,WACNC,aAAc,WACdC,YAAa,KACbL,MAAOM,IACPJ,SAAU,kFACd,CACAC,KAAM,OACFC,aAAc,OACdC,YAAa,MACbL,MAAOO,IACPL,SAAU,oGACd,CACIC,KAAM,QACNC,aAAc,QACdC,YAAa,GACbL,MAAOQ,IACPN,SAAU,8SACd,CACIC,KAAM,cACNC,aAAc,eACdC,YAAa,KACbL,MAAOS,IACPP,SAAU,6FACd,CACIC,KAAM,OACNC,aAAc,OACdC,YAAa,EACbL,MAAOU,IACPR,SAAU,+KACd,CACIC,KAAM,UACNC,aAAc,WACdC,YAAa,GACbL,MAAOW,IACPT,SAAU,0JACd,CACIC,KAAM,eACNC,aAAc,iBACdC,YAAa,IACbL,MAAOY,IACPV,SAAU,0GACd,CACIC,KAAM,SACNC,aAAc,UACdC,YAAa,GACbL,MAAOa,IACPX,SAAU,yHACd,CACIC,KAAM,cACNC,aAAc,gBACdC,YAAa,IACbL,MAAOc,IACPZ,SAAU,yGACd,CACIC,KAAM,aACNC,aAAc,cACdC,YAAa,GACbL,MAAOe,IACPb,SAAU,oOACd,CACIC,KAAM,eACNC,aAAc,gBACdC,YAAa,IACbL,MAAOgB,IACPd,SAAU,4GACd,CACIC,KAAM,gBACNC,aAAc,iBACdC,YAAa,EACbL,MAAOiB,IACPf,SAAU,iDACd,CACIC,KAAM,aACNC,aAAc,cACdC,YAAa,KACbL,MAAOkB,IACPhB,SAAU,mIACd,CACIC,KAAM,YACNC,aAAc,aACdC,YAAa,MACbL,MAAOmB,IACPjB,SAAU,gIACd,CACIC,KAAM,OACNC,aAAc,MACdC,YAAa,GACbL,MAAOoB,IACPlB,SAAU,wGACd,CACIC,KAAM,YACNC,aAAc,aACdC,YAAa,GACbL,MAAOqB,IACPnB,SAAU,4GACd,CACIC,KAAM,UACNC,aAAc,UACdC,YAAa,MACbL,MAAOsB,KACPpB,SAAU,mIAOlB,OALKJ,GACDyB,IAAEC,KAAKzB,EAAc,SAAC0B,GAClBA,EAAMpB,YAAc,IAGrBN,GC9IE2B,GAAsB,SAAC3B,GAClC,IAAM4B,EAAwB,CAC7BpB,KAAMqB,GAAgBC,GAAI,OAAQ9B,GAAcM,YAAa,EAAG,IAAK,EAAE,GACvEC,SAAUuB,GAAI,WAAY9B,GAAcM,YACxCyB,OAAQ,CACPC,MAAOF,GAAI,cAAe9B,GAAcM,YACxC2B,KAAMH,GAAI,aAAc9B,GAAcM,aAEvCW,aAAca,GAAI,eAAgB9B,GAAcM,YAChDY,cAAeY,GAAI,gBAAiB9B,GAAcM,YAAc,EAChE4B,MAAO,CACNF,MAAOF,GAAI,aAAc9B,GAAcM,YAAc,EACrD2B,KAAMH,GAAI,YAAa9B,GAAcM,YAAc,GAEpDe,KAAMQ,GAAgBC,GAAI,OAAQ9B,GAAcM,YAAa,EAAG,KAAK,KACrE6B,IAAKL,GAAI,OAAQ9B,GAAcM,YAAcwB,GAAI,YAAa9B,GAAcM,YAC5EG,MAAOoB,GAAgBC,GAAI,QAAS9B,GAAcM,YAAa,EAAG,KAAK,KACvE8B,IAAK,CACJC,KAAMR,GAAgBC,GAAI,UAAW9B,GAAcM,YAAa,EAAG,KAAK,KACxEgC,IAAKT,GAAgBC,GAAI,SAAU9B,GAAcM,YAAa,EAAG,KAAK,MAEvEK,KAAMmB,GAAI,OAAQ9B,GAAcM,YAChCiB,QAASM,GAAgBC,GAAI,UAAW9B,GAAcM,YAAa,GAAG,IAAM,MAK7E,OAFAsB,EAAsBQ,IAAIC,KAAKE,MAAQT,GAAI,eAAgB9B,GAAcM,YACzEsB,EAAsBQ,IAAIE,IAAIC,MAAQT,GAAI,cAAe9B,GAAcM,YAChEsB,GAGIC,GAAkB,SAACvB,GAAyD,IAA5CkC,EAA4CC,UAAAV,OAAA,QAAAW,IAAAD,UAAA,GAAAA,UAAA,GAAnC,EAGrD,MAAO,CAACT,MAFM1B,EAAckC,GAD4DC,UAAAV,OAAA,QAAAW,IAAAD,UAAA,GAAAA,UAAA,GAApB,GAG9CR,KADT3B,EAAckC,GAF6DC,UAAAV,OAAA,QAAAW,IAAAD,UAAA,GAAAA,UAAA,GAAN,KAMtEX,GAAM,SAAC1B,EAAMJ,GACtB,OAAOwB,IAAEmB,KAAK3C,EAAc,SAAC0B,GAC7B,OAAOA,EAAMtB,OAASA,KAIbwC,GAAwB,SAACC,GAElC,OAD4BC,OAAO,wCACRC,KAAKF,IAAUA,EAAQ,GAGzCG,GAAe,SAAChD,GAC5B,IAAIgD,GAAe,EACnB,IAEShB,GAAMhC,GACNiC,GAAKjC,GAEP,MAAMiD,GACJD,GAAe,EAGvB,OAAOA,GC9DIE,GAAa,SAACC,GACzB,MAAO,CAAC,CAACC,QAAS,IAAKD,IAAK,CAACE,EAAGF,EAAIE,EAAGC,GAAIH,EAAIG,GAAIC,UAAU,KAQlDC,GAAc,SAACL,GAC1B,MAAO,CAAC,CAACC,QAAS,IAAKD,IAAK,CAACE,EAAGF,EAAIE,EAAGC,GAAIH,EAAIG,GAAIC,UAAU,KAQlDE,GAAa,SAACC,EAASP,GAClC,MAAO,CAAC,CAACC,QAAS,IAAKM,QAAS,CAACL,EAAGK,EAAQL,EAAGC,GAAII,EAAQJ,GAAIH,IAAK,CAACE,EAAGF,EAAIE,EAAGC,GAAIH,EAAIG,GAAIC,UAAU,KCnB1FI,GAA0C,SAACxB,GAEvD,OADkByB,KAAKC,IAAI,KAAO1B,EAAM,IAAK,MASjC2B,GAAqB,SAACC,EAAkBC,GACpD,IAAMC,EAAiBD,EAAoBD,EAE3C,OADkBH,KAAKM,IAAI,KAAOD,EAAiB,GAAI,EAAE,wBCP7CE,GAAY,SAACC,EAAOC,GAC/B,OAAOD,EAAME,OAAOD,IAGTE,GAAgB,SAACC,EAAMC,GASlC,OARuBjD,IAAEkD,IAAIF,EAAM,SAACG,GAClC,IAAIC,EAAapD,IAAEqD,UAAUF,GAK7B,OAJIA,EAAOpB,WACToB,EAAOjB,UAAYkB,EAAWlB,QAAUoB,GAAgBH,EAAOjB,QAASe,IACxEE,EAAOxB,MAAQyB,EAAWzB,IAAM2B,GAAgBH,EAAOxB,IAAKsB,KAEvDG,KAKEE,GAAkB,SAACC,EAAaN,GAC3C,IAAMO,EAAmB,GAGzB,OAFAA,EAAiB3B,EAAI0B,EAAY1B,EAAIoB,EAAYpB,EACjD2B,EAAiB1B,EAAIyB,EAAYzB,EAAImB,EAAYnB,EAC1C0B,GAGIC,GAAoB,SAACC,EAAIV,EAAMW,GAC1C,IAAIC,EAAcC,GAAiBH,EAAIV,GAEvC,OADAY,EAAcE,GAAmBF,EAAaZ,EAAMW,IAIzCI,GAAsB,SAACf,GAClC,IAAIgB,EAAgB,GAYpB,OAXAhE,IAAEC,KAAK+C,EAAM,SAACG,GACZa,EAAgBC,GAAcD,EAAeb,EAAOvB,SAChDuB,EAAOjB,UACT8B,EAAgBC,GAAcD,EAAeb,EAAOjB,QAAQL,GAC5DmC,EAAgBC,GAAcD,EAAeb,EAAOjB,QAAQJ,IAE1DqB,EAAOxB,MACTqC,EAAgBC,GAAcD,EAAeb,EAAOxB,IAAIE,GACxDmC,EAAgBC,GAAcD,EAAeb,EAAOxB,IAAIG,MAGrDkC,GAGIC,GAAgB,SAACD,EAAeE,GAG3C,OADAF,GADAA,EAAgBA,EAAclB,OAAOoB,IACPpB,OAAO,MAI1Be,GAAkB,SAACH,EAAIV,GAClC,IAAMgB,EAAgBD,GAAoBf,GAC1C,OAAOmB,EAAAC,EAAAC,cAAA,QACHX,GAAIA,EACJY,EAAGN,EACHO,aAAa,qBACbpB,OAAO,QACPqB,YAAY,KACZC,KAAK,UAKEC,GAAY,SAAC1B,GACxB,IAAMgB,EAAgBD,GAAoBf,GAE1C,OADe2B,KAAQC,SAASZ,GAAea,QAIpCC,GAAW,SAAC9B,GACvB,IAAMgB,EAAgBD,GAAoBf,GAE1C,OADc2B,KAAQC,SAASZ,GAAee,OAgBnCjB,GAAqB,SAACF,EAAaZ,EAAMW,GACpD,IAAMqB,EAAcC,GAAqBjC,EAAMW,GACzCV,EAAciC,GAAkBlC,EAAMgC,GACtCG,EAAe,aAAArC,OAAgBG,EAAYpB,EAA5B,KAAAiB,OAAiCG,EAAYnB,EAA7C,YAAAgB,OAAyDkC,EAAzD,KACrB,OAAOb,EAAAC,EAAAC,cAAA,KAAGe,UAAWD,GAAd,IAAiCvB,EAAjC,MAGIqB,GAAuB,SAACjC,EAAMW,GACzC,IAAM0B,EAAa1B,EAAkB9B,EAAIiD,GAAS9B,GAC5CsC,EAAc3B,EAAkB7B,EAAI4C,GAAU1B,GAEpD,OADqBqC,EAAaC,EJhFI,GIgFYD,EJhFZ,GIgFsDC,GAIjFJ,GAAoB,SAAClC,EAAMgC,GAEtC,MAAO,CAACnD,EAAG,EAAGC,EADK4C,GAAU1B,GAAQgC,aCoC1BO,GAAwB,SAACC,EAAIC,EAAIC,GAC5C,IAAMC,EAAKH,EAAG3D,EAAI,EAAI4D,EAAG5D,EAAI6D,EAAG7D,EAC1B+D,EAAKJ,EAAG1D,EAAI,EAAI2D,EAAG3D,EAAI4D,EAAG5D,EAC1B+D,EAAK,EAAIJ,EAAG5D,EAAI,EAAI2D,EAAG3D,EACvBiE,EAAK,EAAIL,EAAG3D,EAAI,EAAI0D,EAAG1D,EACvBiE,EAAI,GAAKJ,EAAKA,EAAKC,EAAKA,GACxBI,EAAI,GAAKL,EAAKE,EAAKD,EAAKE,GACxBG,EAAIJ,EAAKA,EAAKC,EAAKA,EAEnBI,EAAO,EAAI9D,KAAK+D,KAAKJ,EAAEC,EAAEC,GACzBG,EAAMhE,KAAK+D,KAAKJ,GAChBM,EAAO,EAAIN,EAAIK,EACfE,EAAM,EAAIlE,KAAK+D,KAAKF,GACpBM,EAAKP,EAAII,EAEf,OAAQC,EAAOH,EAAOE,EAAMJ,GAAKE,EAAOI,IAAQ,EAAIL,EAAIF,EAAIC,EAAIA,GAAK5D,KAAKoE,KAAK,EAAIJ,EAAMG,EAAKL,IAASK,EAAKD,MAAU,EAAID,IAG/GI,GAAkC,SAACjB,EAAIC,EAAIC,EAAIgB,GAKxD,IAAMC,EAAQ5C,GAAmB,GAAAjB,OAAA8D,OAAAC,EAAA,EAAAD,CAC5BlF,GAAW8D,IADiBoB,OAAAC,EAAA,EAAAD,CAE5B5E,GAAYyD,MAGX7C,EAAQmB,GAAmB,GAAAjB,OAAA8D,OAAAC,EAAA,EAAAD,CAC5BlF,GAAWgE,IADiBkB,OAAAC,EAAA,EAAAD,CAE5B5E,GAAY0E,MAGXI,EAAsBC,qBAC1BC,iBAAM,OAAQ,CAAC1C,EAAGqC,IAClBK,iBAAM,OAAQ,CAAC1C,EAAG1B,KAIpB,MAD0B,CAACf,EAAGiF,EAAoBG,OAAO,GAAGpF,EAAGC,EAAGgF,EAAoBG,OAAO,GAAGnF,IAIvFoF,GAAoC,SAAC1B,EAAIC,EAAIC,EAAIgB,EAAIS,GAKhE,IAAMR,EAAQ5C,GAAmB,GAAAjB,OAAA8D,OAAAC,EAAA,EAAAD,CAC5BlF,GAAW8D,IADiBoB,OAAAC,EAAA,EAAAD,CAE5B5E,GAAYyD,MAGX7C,EAAQmB,GAAmB,GAAAjB,OAAA8D,OAAAC,EAAA,EAAAD,CAC5BlF,GAAWgE,IADiBkB,OAAAC,EAAA,EAAAD,CAE5B3E,GAAWyE,EAAIS,MAGdL,EAAsBC,qBAC1BC,iBAAM,OAAQ,CAAC1C,EAAGqC,IAClBK,iBAAM,OAAQ,CAAC1C,EAAG1B,KAIpB,MAD0B,CAACf,EAAGiF,EAAoBG,OAAO,GAAGpF,EAAGC,EAAGgF,EAAoBG,OAAO,GAAGnF,IAIrFsF,GAA0B,SAAC5B,EAAIE,EAAI2B,GAO9C,IAAM5B,EAAK,GACL6B,EAAiB5B,EAAG5D,EAAK0D,EAAG1D,EAC5ByF,EAAgB7B,EAAG7D,EAAI2D,EAAG3D,EAC1B2F,EAAiBpF,KAAK+D,KAAK/D,KAAKqF,IAAIH,EAAgB,GAAKlF,KAAKqF,IAAIF,EAAe,IAIvF,OAHA9B,EAAG5D,EAAI2D,EAAG3D,EAAI0F,GAAiBF,EAAUG,GACzC/B,EAAG3D,EAAI0D,EAAG1D,EAAIwF,GAAkBD,EAAUG,GAEnC/B,GC/MIjF,GAAQ,SAAChC,GAEpB,IAAM4B,EAAwBD,GAAoB3B,GAC5CkJ,EAAKC,GAA0BnJ,EAAc4B,GA6CpD,MA3CgB,GAAA0C,OAAA8D,OAAAC,EAAA,EAAAD,CAEVlF,GAAW,CAACG,EAAG6F,EAAGE,GAAI9F,EAAG4F,EAAGG,OAFlBjB,OAAAC,EAAA,EAAAD,CAGV5E,GAAY,CAACH,EAAG6F,EAAGE,GAAI9F,EAAG4F,EAAGI,MAHnBlB,OAAAC,EAAA,EAAAD,CAIV5E,GAAY,CAACH,EAAG6F,EAAGK,IAAKjG,EAAG4F,EAAGI,MAJpBlB,OAAAC,EAAA,EAAAD,CAKV5E,GAAY,CAACH,EAAG6F,EAAGM,IAAKlG,EAAG4F,EAAGO,MALpBrB,OAAAC,EAAA,EAAAD,CAMV5E,GAAY,CAACH,EAAG6F,EAAGQ,IAAKpG,EAAG4F,EAAGS,MANpBvB,OAAAC,EAAA,EAAAD,CAOV3E,GAAW,CAACJ,EAAG6F,EAAGU,IAAKtG,EAAG4F,EAAGW,IAAK,CAACxG,EAAG6F,EAAGY,IAAKxG,EAAG4F,EAAGa,MAP1C3B,OAAAC,EAAA,EAAAD,CAQV3E,GAAW,CAACJ,EAAG6F,EAAGc,IAAK1G,EAAG4F,EAAGa,IAAK,CAAC1G,EAAG6F,EAAGc,IAAK1G,EAAG4F,EAAGe,OAR1C7B,OAAAC,EAAA,EAAAD,CASV5E,GAAY,CAACH,EAAG6F,EAAGgB,IAAK5G,EAAG4F,EAAGiB,OATpB/B,OAAAC,EAAA,EAAAD,CAUV5E,GAAY,CAACH,EAAG6F,EAAGkB,GAAI9G,EAAG4F,EAAGmB,OAVnBjC,OAAAC,EAAA,EAAAD,CAWV3E,GAAW,CAACJ,EAAG6F,EAAGoB,GAAIhH,EAAG4F,EAAGqB,KAAM,CAAClH,EAAG6F,EAAGsB,GAAIlH,EAAG4F,EAAGuB,MAXzCrC,OAAAC,EAAA,EAAAD,CAYV5E,GAAY,CAACH,EAAG6F,EAAGwB,GAAIpH,EAAG4F,EAAGyB,OAZnBvC,OAAAC,EAAA,EAAAD,CAaV5E,GAAY,CAACH,EAAG6F,EAAG0B,GAAItH,EAAG4F,EAAG2B,OAbnBzC,OAAAC,EAAA,EAAAD,CAcV3E,GAAW,CAACJ,EAAG6F,EAAG0B,GAAItH,EAAG4F,EAAGG,KAAM,CAAChG,EAAG6F,EAAGE,GAAI9F,EAAG4F,EAAGG,OAdzCjB,OAAAC,EAAA,EAAAD,CAiBVlF,GAAW,CAACG,EAAG6F,EAAGsB,GAAIlH,EAAG4F,EAAGI,MAjBlBlB,OAAAC,EAAA,EAAAD,CAkBV5E,GAAY,CAACH,EAAG6F,EAAGsB,GAAIlH,EAAG4F,EAAGO,MAlBnBrB,OAAAC,EAAA,EAAAD,CAmBV5E,GAAY,CAACH,EAAG6F,EAAG4B,GAAIxH,EAAG4F,EAAG6B,MAnBnB3C,OAAAC,EAAA,EAAAD,CAoBV5E,GAAY,CAACH,EAAG6F,EAAG4B,GAAIxH,EAAG4F,EAAGS,MApBnBvB,OAAAC,EAAA,EAAAD,CAqBV5E,GAAY,CAACH,EAAG6F,EAAGsB,GAAIlH,EAAG4F,EAAG8B,MArBnB5C,OAAAC,EAAA,EAAAD,CAsBV5E,GAAY,CAACH,EAAG6F,EAAGsB,GAAIlH,EAAG4F,EAAGuB,MAtBnBrC,OAAAC,EAAA,EAAAD,CAwBVlF,GAAW,CAACG,EAAG6F,EAAGsB,GAAIlH,EAAG4F,EAAGO,MAxBlBrB,OAAAC,EAAA,EAAAD,CAyBV5E,GAAY,CAACH,EAAG6F,EAAG+B,GAAI3H,EAAG4F,EAAG6B,MAzBnB3C,OAAAC,EAAA,EAAAD,CA0BV5E,GAAY,CAACH,EAAG6F,EAAG+B,GAAI3H,EAAG4F,EAAGS,MA1BnBvB,OAAAC,EAAA,EAAAD,CA2BV5E,GAAY,CAACH,EAAG6F,EAAGsB,GAAIlH,EAAG4F,EAAG8B,MA3BnB5C,OAAAC,EAAA,EAAAD,CA8BVlF,GAAW,CAACG,EAAG6F,EAAGsB,GAAIlH,EAAG4F,EAAGuB,MA9BlBrC,OAAAC,EAAA,EAAAD,CA+BV5E,GAAY,CAACH,EAAG6F,EAAGgC,IAAK5H,EAAG4F,EAAGiC,OA/BpB/C,OAAAC,EAAA,EAAAD,CAgCVlF,GAAW,CAACG,EAAG6F,EAAGsB,GAAIlH,EAAG4F,EAAGuB,MAhClBrC,OAAAC,EAAA,EAAAD,CAiCV5E,GAAY,CAACH,EAAG6F,EAAGkC,IAAK9H,EAAG4F,EAAGmC,OAjCpBjD,OAAAC,EAAA,EAAAD,CAoCVlF,GAAW,CAACG,EAAG6F,EAAGsB,GAAIlH,EAAG4F,EAAGuB,MApClBrC,OAAAC,EAAA,EAAAD,CAqCV5E,GAAY,CAACH,EAAG6F,EAAGoC,IAAKhI,EAAG4F,EAAGqC,MArCpBnD,OAAAC,EAAA,EAAAD,CAsCVlF,GAAW,CAACG,EAAG6F,EAAGsB,GAAIlH,EAAG4F,EAAGuB,MAtClBrC,OAAAC,EAAA,EAAAD,CAuCV5E,GAAY,CAACH,EAAG6F,EAAGsC,IAAKlI,EAAG4F,EAAGuC,QAOxBxJ,GAAO,SAACjC,GAEnB,IAAM4B,EAAwBD,GAAoB3B,GAC5C0L,EAAKC,GAAyB3L,EAAc4B,GAwClD,MAtCc,GAAA0C,OAAA8D,OAAAC,EAAA,EAAAD,CAETlF,GAAW,CAACG,EAAGqI,EAAGtC,GAAI9F,EAAGoI,EAAGpC,MAFnBlB,OAAAC,EAAA,EAAAD,CAGT5E,GAAY,CAACH,EAAGqI,EAAG5B,IAAKxG,EAAGoI,EAAGpC,MAHrBlB,OAAAC,EAAA,EAAAD,CAIT5E,GAAY,CAACH,EAAGqI,EAAGF,IAAKlI,EAAGoI,EAAGX,MAJrB3C,OAAAC,EAAA,EAAAD,CAKT5E,GAAY,CAACH,EAAGqI,EAAG9B,IAAKtG,EAAGoI,EAAG/B,MALrBvB,OAAAC,EAAA,EAAAD,CAMT5E,GAAY,CAACH,EAAGqI,EAAG5B,IAAKxG,EAAGoI,EAAGD,MANrBrD,OAAAC,EAAA,EAAAD,CAOT5E,GAAY,CAACH,EAAGqI,EAAG5B,IAAKxG,EAAGoI,EAAGL,OAPrBjD,OAAAC,EAAA,EAAAD,CAQT3E,GAAW,CAACJ,EAAGqI,EAAGJ,IAAKhI,EAAGoI,EAAGL,KAAM,CAAChI,EAAGqI,EAAGJ,IAAKhI,EAAGoI,EAAGrC,OAR5CjB,OAAAC,EAAA,EAAAD,CAST5E,GAAY,CAACH,EAAGqI,EAAGtB,GAAI9G,EAAGoI,EAAGnB,OATpBnC,OAAAC,EAAA,EAAAD,CAUT5E,GAAY,CAACH,EAAGqI,EAAGR,IAAK5H,EAAGoI,EAAG3B,MAVrB3B,OAAAC,EAAA,EAAAD,CAWT5E,GAAY,CAACH,EAAGqI,EAAGE,GAAItI,EAAGoI,EAAGzB,OAXpB7B,OAAAC,EAAA,EAAAD,CAYT5E,GAAY,CAACH,EAAGqI,EAAGlB,GAAIlH,EAAGoI,EAAGP,OAZpB/C,OAAAC,EAAA,EAAAD,CAaT5E,GAAY,CAACH,EAAGqI,EAAGT,GAAI3H,EAAGoI,EAAGD,MAbpBrD,OAAAC,EAAA,EAAAD,CAcT3E,GAAW,CAACJ,EAAGqI,EAAGT,GAAI3H,EAAGoI,EAAGjB,IAAK,CAACpH,EAAGqI,EAAGZ,GAAIxH,EAAGoI,EAAGjB,MAdzCrC,OAAAC,EAAA,EAAAD,CAeT3E,GAAW,CAACJ,EAAGqI,EAAGG,GAAIvI,EAAGoI,EAAG7B,IAAK,CAACxG,EAAGqI,EAAGhB,GAAIpH,EAAGoI,EAAGV,MAfzC5C,OAAAC,EAAA,EAAAD,CAgBT5E,GAAY,CAACH,EAAGqI,EAAGd,GAAItH,EAAGoI,EAAGX,MAhBpB3C,OAAAC,EAAA,EAAAD,CAiBT5E,GAAY,CAACH,EAAGqI,EAAGtC,GAAI9F,EAAGoI,EAAGpC,MAjBpBlB,OAAAC,EAAA,EAAAD,CAoBTlF,GAAW,CAACG,EAAGqI,EAAGhB,GAAIpH,EAAGoI,EAAGV,MApBnB5C,OAAAC,EAAA,EAAAD,CAqBT5E,GAAY,CAACH,EAAGqI,EAAGpB,GAAIhH,EAAGoI,EAAG/B,MArBpBvB,OAAAC,EAAA,EAAAD,CAsBT5E,GAAY,CAACH,EAAGqI,EAAGN,IAAK9H,EAAGoI,EAAGX,MAtBrB3C,OAAAC,EAAA,EAAAD,CAuBT5E,GAAY,CAACH,EAAGqI,EAAGxB,IAAK5G,EAAGoI,EAAG/B,MAvBrBvB,OAAAC,EAAA,EAAAD,CAwBT5E,GAAY,CAACH,EAAGqI,EAAG9B,IAAKtG,EAAGoI,EAAG/B,MAxBrBvB,OAAAC,EAAA,EAAAD,CA2BTlF,GAAW,CAACG,EAAGqI,EAAGR,IAAK5H,EAAGoI,EAAG3B,MA3BpB3B,OAAAC,EAAA,EAAAD,CA4BT5E,GAAY,CAACH,EAAGqI,EAAGR,IAAK5H,EAAGoI,EAAGH,MA5BrBnD,OAAAC,EAAA,EAAAD,CA6BT5E,GAAY,CAACH,EAAGqI,EAAGpB,GAAIhH,EAAGoI,EAAG/B,MA7BpBvB,OAAAC,EAAA,EAAAD,CA8BTlF,GAAW,CAACG,EAAGqI,EAAGR,IAAK5H,EAAGoI,EAAGH,MA9BpBnD,OAAAC,EAAA,EAAAD,CA+BT5E,GAAY,CAACH,EAAGqI,EAAGxB,IAAK5G,EAAGoI,EAAG/B,MA/BrBvB,OAAAC,EAAA,EAAAD,CAkCTlF,GAAW,CAACG,EAAGqI,EAAGN,IAAK9H,EAAGoI,EAAGX,MAlCpB3C,OAAAC,EAAA,EAAAD,CAmCT5E,GAAY,CAACH,EAAGqI,EAAGN,IAAK9H,EAAGoI,EAAGpC,QAMxBH,GAA4B,SAACnJ,EAAc4B,GACtD,IH9GgCO,EG8G1B2J,EAAKlK,EACLmK,EAAiBjI,GAAmBhC,GAAI,QAAS9B,GAAcM,YAAawB,GAAI,SAAU9B,GAAcM,aACxG0L,EAAoBrI,GAAwCmI,EAAG3J,KAC/D8J,GHjH0B9J,EGiHQ2J,EAAG3J,IHhH1ByB,KAAKC,IAAI,IAAM1B,EAAM,GAAI,MGiHpC+J,EAAoBJ,EAAG1J,IAAIE,IAAIC,MAAQuJ,EAAG1J,IAAIC,KAAKE,MACrDP,EAAQ,CACZA,GAAW,GACXA,EAAM4I,GAAKkB,EAAGtL,KAAKwB,MNhGW,IMiG9BA,EAAM8I,IAAMgB,EAAG5K,cAAgB6K,GAAgB,EAC/C,IAAMI,GAA0BL,EAAGtL,KAAKwB,MAAQ,EAAE,GAAG,EAC/CoK,EAAwBxI,KAAK+D,KAAK/D,KAAKqF,IAAI6C,EAAGvL,SAAWyL,EAAmB,GAAKpI,KAAKqF,IAAIkD,EAAwB,IACxHnK,EAAMwI,GAAKsB,EAAG5K,cAAc,EAC5Bc,EAAMiJ,IAAMa,EAAG5K,cAAgB6K,GAAgB,EAC/C/J,EAAMgI,IAAM8B,EAAG5J,MAAMF,MAAQgK,EAAoB,EAAE,EACnDhK,EAAM0H,IAAMoC,EAAGrL,MAAMwB,KAAO8J,ENzGV,EAAE,EM0GpB/J,EAAM8H,IAAMgC,EAAGzK,KAAKW,MACpBA,EAAMwH,IAAMsC,EAAG1J,IAAIC,KAAKJ,KN3GN,EAAE,EM4GpBD,EAAMuH,IAAMuC,EAAG1J,IAAIE,IAAIL,KN5GL,EAAE,EM6GpBD,EAAMsH,GAAK,EACXtH,EAAMyH,GAAKyC,EACXlK,EAAM+I,GAAKe,EAAG1J,IAAIE,IAAIC,MAAQ,GAC9BP,EAAM2H,GAAKmC,EAAG1J,IAAIE,IAAIC,MACtBP,EAAM6H,GAAKiC,EAAG1J,IAAIE,IAAIC,MAAQ,EAC9BP,EAAMqH,IAAMyC,EAAG1J,IAAIE,IAAIC,MAAQuJ,EAAG/J,OAAOC,MAAQ,EAAE,EACnDA,EAAM6I,IAAMiB,EAAG1J,IAAIE,IAAIC,MAAQuJ,EAAG/J,OAAOC,MAAQ8J,EAAGtL,KAAKwB,MAAQ,EAAE,EACnEA,EAAM4H,IAAM5H,EAAM0H,IAClB,IAAI2C,EAAazI,KAAK+D,KAAK/D,KAAKqF,IAAI6C,EAAGnL,KAAOsL,EAAe,GAAKrI,KAAKqF,IAAIjH,EAAM8H,IAAM9H,EAAM0H,IAAK,IAClG1H,EAAM+H,GAAK+B,EAAG1J,IAAIE,IAAIC,MAAQ8J,EAC9BrK,EAAMiI,IAAMjI,EAAMqH,IAAM,EACxB,IAAMiD,EAAiBtK,EAAM+H,IAAM/H,EAAMiI,IAAMjI,EAAM+H,IAAI,EACzD/H,EAAMqJ,IAAMiB,EAAiBL,GAAe,EAAErI,KAAK+D,KAAK,IACxD3F,EAAMmJ,IAAMmB,EAAiBL,GAAe,EAAErI,KAAK+D,KAAK,IACxD3F,EAAMkJ,IAAMxC,GAAkC,CAACrF,GAAI,IAAKC,EAAGtB,EAAMmJ,KACnB,CAAC9H,EAAG,IAAKC,EAAGtB,EAAMmJ,KAClB,CAAC9H,EAAGrB,EAAM8H,IAAKxG,EAAGtB,EAAM+H,IACxB,CAAC1G,EAAGrB,EAAMgI,IAAK1G,EAAGtB,EAAM+H,IACxB,CAAC1G,EAAGrB,EAAMgI,IAAK1G,EAAGtB,EAAMiI,MAAM5G,EAC5ErB,EAAMoJ,IAAM1C,GAAkC,CAACrF,GAAI,IAAKC,EAAGtB,EAAMqJ,KACnB,CAAChI,EAAG,IAAKC,EAAGtB,EAAMqJ,KAClB,CAAChI,EAAGrB,EAAM8H,IAAKxG,EAAGtB,EAAM+H,IACxB,CAAC1G,EAAGrB,EAAMgI,IAAK1G,EAAGtB,EAAM+H,IACxB,CAAC1G,EAAGrB,EAAMgI,IAAK1G,EAAGtB,EAAMiI,MAAM5G,EAC5E,IAAMkJ,EAAsBxF,GAAsB,CAAC1D,EAAGrB,EAAM8H,IAAKxG,EAAGtB,EAAM+H,IACxB,CAAC1G,EAAGrB,EAAMgI,IAAK1G,EAAGtB,EAAM+H,IACxB,CAAC1G,EAAGrB,EAAMgI,IAAK1G,EAAGtB,EAAMiI,MACpEuC,EAAsB5D,GAAwB,CAACvF,EAAGrB,EAAMgI,IAAK1G,EAAGtB,EAAMiI,KACxB,CAAC5G,EAAGrB,EAAM4I,GAAKwB,EAAuB9I,EAAGtB,EAAM6I,IAAMsB,GACrDL,EAAGvK,QAAQU,KAAOsK,GACtEvK,EAAMmI,IAAMqC,EAAoBlJ,EAChCtB,EAAMkI,IAAMsC,EAAoBnJ,EAChC,IAAMoJ,EAAoB7I,KAAK+D,KAAK/D,KAAKqF,IAAIjH,EAAMkI,IAAIlI,EAAM4I,GAAI,GAAKhH,KAAKqF,IAAIjH,EAAMmI,IAAInI,EAAM6I,IAAK,IAAMmB,EACpGU,EAAqB9D,GAAwB,CAACvF,EAAGrB,EAAMkI,IAAK5G,EAAGtB,EAAMmI,KACxB,CAAC9G,EAAGrB,EAAM4I,GAAItH,EAAGtB,EAAM6I,MACrB4B,EAAoBT,GAAmB,GACtFW,EAAkB/D,GAAwB,CAACvF,EAAGrB,EAAMkI,IAAK5G,EAAGtB,EAAMmI,KACxB,CAAC9G,EAAGrB,EAAM4I,GAAItH,EAAGtB,EAAM6I,MACtB4B,EAAoBT,GAAmB,GAsCxF,OArCAhK,EAAM2I,IAAMgC,EAAgBrJ,EAC5BtB,EAAMuI,IAAMvI,EAAM2I,IAAM,EACxB3I,EAAMyI,GAAKzI,EAAMqH,IAAMzF,KAAK+D,KAAK/D,KAAKqF,IAAI6C,EAAG7K,aAAc,GAAK2C,KAAKqF,IAAI6C,EAAG5K,cAAc,EAAG,IAC7Fc,EAAMwJ,IAAM9C,GAAkC,CAACrF,GAAI,IAAKC,EAAGtB,EAAMyI,GAAKwB,EAAc,GAC7C,CAAC5I,EAAG,IAAKC,EAAGtB,EAAMyI,GAAKwB,EAAc,GACrC,CAAC5I,EAAGrB,EAAM0H,IAAKpG,EAAGtB,EAAM2H,IACxB,CAACtG,EAAGrB,EAAM4H,IAAKtG,EAAGtB,EAAM6H,IACxB,CAACxG,EAAGrB,EAAM8H,IAAKxG,EAAGtB,EAAM+H,KAAK1G,EACpErB,EAAMqI,IAAMqC,EAAmBpJ,EAC/BtB,EAAM0I,GAAKiC,EAAgBtJ,EAC3BrB,EAAMoI,GAAKsC,EAAmBrJ,EAC9BrB,EAAMsI,GAAKtI,EAAMoI,GACjBpI,EAAM6J,GAAK5D,GAAgC,CAAC5E,EAAGrB,EAAMwI,GAAIlH,EAAGtB,EAAMyI,IACvB,CAACpH,EAAGrB,EAAM0I,GAAIpH,EAAGtB,EAAM2I,KACvB,CAACtH,GAAI,IAAKC,EAAGtB,EAAMiI,KACnB,CAAC5G,EAAG,IAAKC,EAAGtB,EAAMiI,MAAM5G,EACnErB,EAAM4J,GAAK3D,GAAgC,CAAC5E,EAAGrB,EAAMwI,GAAIlH,EAAGtB,EAAMyI,IACvB,CAACpH,EAAGrB,EAAMoI,GAAI9G,EAAGtB,EAAMqI,KACvB,CAAChH,GAAI,IAAKC,EAAGtB,EAAMiI,KACnB,CAAC5G,EAAG,IAAKC,EAAGtB,EAAMiI,MAAM5G,EACnErB,EAAMsJ,IAAM5C,GAAkC,CAACrF,GAAI,IAAKC,EAAGtB,EAAMyI,GAAKwB,EAAc,GACzC,CAAC5I,EAAG,IAAKC,EAAGtB,EAAMyI,GAAKwB,EAAc,GACrC,CAAC5I,EAAGrB,EAAM0H,IAAKpG,EAAGtB,EAAM2H,IACxB,CAACtG,EAAGrB,EAAM4H,IAAKtG,EAAGtB,EAAM6H,IACxB,CAACxG,EAAGrB,EAAM8H,IAAKxG,EAAGtB,EAAM+H,KAAK1G,EACxErB,EAAMgJ,GAAKhJ,EAAMyI,GAAK,IACtBzI,EAAMuJ,IAAM7C,GAAkC,CAACrF,GAAI,IAAKC,EAAGtB,EAAMyI,GAAKwB,EAAc,GACzC,CAAC5I,EAAG,IAAKC,EAAGtB,EAAMyI,GAAKwB,EAAc,GACrC,CAAC5I,EAAGrB,EAAM0H,IAAKpG,EAAGtB,EAAM2H,IACxB,CAACtG,EAAGrB,EAAM4H,IAAKtG,EAAGtB,EAAM6H,IACxB,CAACxG,EAAGrB,EAAM8H,IAAKxG,EAAGtB,EAAM+H,KAAKzG,EAExEtB,EAAMyJ,IAAM/C,GAAkC,CAACrF,GAAI,IAAKC,EAAGtB,EAAMyI,GAAKwB,EAAc,GACzC,CAAC5I,EAAG,IAAKC,EAAGtB,EAAMyI,GAAKwB,EAAc,GACrC,CAAC5I,EAAGrB,EAAM0H,IAAKpG,EAAGtB,EAAM2H,IACxB,CAACtG,EAAGrB,EAAM4H,IAAKtG,EAAGtB,EAAM6H,IACxB,CAACxG,EAAGrB,EAAM8H,IAAKxG,EAAGtB,EAAM+H,KAAKzG,EACjEtB,GAGI2J,GAA2B,SAAC3L,EAAc4B,GACrD,IAAMkK,EAAKlK,EACLmK,EAAiBjI,GAAmBhC,GAAI,QAAS9B,GAAcM,YAAawB,GAAI,SAAU9B,GAAcM,aACxG0L,EAAoBrI,GAAwCmI,EAAG3J,KAC/D+J,EAAoBJ,EAAG1J,IAAIE,IAAIC,MAAQuJ,EAAG1J,IAAIC,KAAKE,MACrDN,EAAO,GACXA,EAAKmH,GAAK0C,EAAG1J,IAAIE,IAAIL,KNlMH,EAAE,EMmMpBA,EAAK6I,GAAKgB,EAAGzK,KAAKY,KNnMA,EAAE,EMoMpB,IACMmK,EAAwBxI,KAAK+D,KAAK/D,KAAKqF,IAAI6C,EAAGvL,SAAWyL,EAAmB,GAAKpI,KAAKqF,IAD7D,EACyF,IACxHhH,EAAKyI,GAAKoB,EAAGrL,MAAMwB,KAAO8J,ENtMR,EAAE,EMuMpB9J,EAAKgJ,GAAKa,EAAG5J,MAAMD,KAAO,IAC1BA,EAAKqI,GNvMqB,EAAE,GMuMFwB,EAAGrL,MAAMwB,KAAO8J,GAAgB,EAC1D9J,EAAKmJ,INxMqB,EAAE,EMwMFU,EAAGrL,MAAMwB,KAAK,EACxCA,EAAKiI,INzMqB,EAAE,GMyMD4B,EAAGrL,MAAMwB,KAAO8J,GAAgB,EAC3D9J,EAAKqJ,IAAMQ,EAAGtL,KAAKyB,KAAO+J,EAC1B/J,EAAK2H,IN3MqB,EAAE,EM4M5B3H,EAAK6H,IAAM,EACX7H,EAAKqH,GAAK,EACVrH,EAAKwH,GAAKqC,EAAG1J,IAAIE,IAAIC,MAAQ,EAC7BN,EAAK8I,GAAKmB,EACVjK,EAAK0H,GAAKmC,EAAG1J,IAAIE,IAAIC,MACrBN,EAAK+I,GAAKc,EAAG1J,IAAIE,IAAIC,MAAQ,GAC7BN,EAAK4H,GAAKiC,EAAG1J,IAAIE,IAAIC,MAAQ,EAC7BN,EAAKoJ,IAAMS,EAAG1J,IAAIE,IAAIC,MAAQuJ,EAAG/J,OAAOE,KAAO,EAAE,EACjDA,EAAKoH,IAAMpH,EAAKoJ,IAAM,EACtBpJ,EAAKwI,GAAKqB,EAAG1J,IAAIE,IAAIC,MAAQqB,KAAK+D,KAAK/D,KAAKqF,IAAI6C,EAAGnL,KAAM,GAAKiD,KAAKqF,IAAIhH,EAAKyI,GAAKzI,EAAK6I,GAAI,IAAM,IAChG7I,EAAKwJ,GAAKxJ,EAAKwI,GAAKqB,EAAG/J,OAAOE,KAAK,EACnCA,EAAKsJ,GAAKtJ,EAAKwI,GAAK,EACpB,IAAM8B,EAAsBxF,GAAsB,CAAC1D,EAAGpB,EAAK6I,GAAIxH,EAAGrB,EAAKwI,IACrB,CAACpH,EAAGpB,EAAKgJ,GAAI3H,EAAGrB,EAAKwI,IACrB,CAACpH,EAAGpB,EAAKgJ,GAAI3H,EAAGrB,EAAKwJ,KACjEe,EAAsB5D,GAAwB,CAACvF,EAAGpB,EAAKgJ,GAAI3H,EAAGrB,EAAKwJ,IACrB,CAACpI,EAAGpB,EAAKqJ,IAAMc,EAAuB9I,EAAGrB,EAAKoH,IAzBnE,GA0BqByC,EAAGvK,QAAQU,KAAOsK,GACtEtK,EAAKuI,GAAKgC,EAAoBnJ,EAAI,IAClCpB,EAAKkJ,IAAMqB,EAAoBlJ,EAC/B,IAAMmJ,EAAoB7I,KAAK+D,KAAK/D,KAAKqF,IAAIhH,EAAKqJ,IAAIrJ,EAAKuI,GAAI,GAAK5G,KAAKqF,IAAIhH,EAAKoH,IAAIpH,EAAKkJ,IAAK,IAAMa,EAChGU,EAAqB9D,GAAwB,CAACvF,EAAGpB,EAAKuI,GAAIlH,EAAGrB,EAAKkJ,KACrB,CAAC9H,EAAGpB,EAAKqJ,IAAKhI,EAAGrB,EAAKoH,MACpBoD,EAAoBT,GAAmB,GACtFW,EAAkB/D,GAAwB,CAACvF,EAAGpB,EAAKuI,GAAIlH,EAAGrB,EAAKkJ,KACrB,CAAC9H,EAAGpB,EAAKqJ,IAAKhI,EAAGrB,EAAKoH,MACrBoD,EAAoBT,GAAmB,GAaxF,OAZA/J,EAAKiJ,IAAMyB,EAAgBtJ,EAC3BpB,EAAKmI,GAAKnI,EAAKiJ,IAAM,IACrBjJ,EAAKgI,IAAMyC,EAAmBpJ,EAC9BrB,EAAKsI,IAAMoC,EAAgBrJ,EAC3BrB,EAAK8H,GAAK9H,EAAKsI,IAAM,IACrBtI,EAAK2J,GAAKc,EAAmBrJ,EAAI,IACjCpB,EAAK4J,GAAK5J,EAAKyI,GAAK,EAAE,EACtBzI,EAAKuJ,IAAMvD,GAAgC,CAAC5E,EAAGpB,EAAK2H,IAAKtG,EAAGrB,EAAK0H,IACtB,CAACtG,EAAGpB,EAAK6H,IAAKxG,EAAGrB,EAAKwH,IACtB,CAACpG,GAAI,IAAKC,EAAGrB,EAAK8I,IAClB,CAAC1H,EAAG,IAAKC,EAAGrB,EAAK8I,KAAK1H,EACjEpB,EAAK2I,GAAKkB,EAAG1J,IAAIC,KAAKJ,KAAOA,EAAKuJ,INnPhB,EAAE,EMoPbvJ,qBCtQI2K,GAAuB,SAACC,EAAaC,EAActG,GAC9D,IAAIuG,EAAMC,SAASC,eAAe,kBAAkBC,UAChDC,EAASH,SAASnH,cAAc,UAQpC,OAPAsH,EAAO5G,MAAQsG,EACfM,EAAO9G,OAASyG,EAEhBM,GAAMD,EAAQJ,GAIP,CAACxG,MAHM4G,EAAO5G,MAAMC,EAGLH,OAFP8G,EAAO9G,OAAOG,EAESvG,MADxBkN,EAAOE,UAAU,eAIpBC,GAAiB,WAI5B,OAAO,IAAIC,GAHS,IACP,KACE,OAIJC,GAAkB,SAACC,EAAKN,GACnCM,EAAIC,aAAa,IAAK,IAAK,KAC3BD,EAAIE,YAAY,IAChBF,EAAIG,KAAK,IAAK,EAAG,iBACjBH,EAAIE,YAAY,IAChBF,EAAIC,aAAa,IAAK,IAAK,KAC3BD,EAAIG,KAAK,EAAG,EAAG,uBAYJC,GAAqC,SAACV,GACjD,IAAMW,EAAoBlK,KAAKmK,KAAKZ,EAAO9G,OAAS1G,IAC9CqO,EAAmBpK,KAAKmK,KAAKZ,EAAO5G,MAAQ5G,IAGlD,MAAO,CAACmO,kBAAmBA,EACnBE,iBAAkBA,EAClBC,UAJQD,EAAmBrO,GAAWwN,EAAO5G,OAAS,EAKtD2H,UAJQJ,EAAoBnO,GAAYwN,EAAO9G,QAAU,IActD8H,GAAwB,SAACV,EAAKN,EAAQiB,EAAaC,GAC9D7M,IAAE8M,MAAMF,EAAYN,kBAAmB,SAACS,GACtC/M,IAAE8M,MAAMF,EAAYJ,iBAAkB,SAACQ,GACrC,IAAIC,EATqC,SAACL,EAAaG,EAAYC,GAGvE,MAAO,CAACnL,EAFE+K,EAAYH,SAAYtO,GAAW4O,EAE/BjL,EADJ8K,EAAYF,SAAYvO,GAAY6O,GAOjBE,CAAgCN,EAAaG,EAAYC,IA9BzD,SAACf,EAAKN,EAAQc,EAAUC,EAAUK,EAAYC,GAC3Ef,EAAIkB,UACJlB,EAAImB,SAASzB,EAAOlN,MAAO,MAAOgO,EAAUC,EAAUf,EAAO5G,MAAO4G,EAAO9G,QAC3EoH,EAAIE,YAAY,IAChBF,EAAIC,aAAa,IAAK,IAAK,KAC3BD,EAAIG,KAAK,EAAG,EAAG,QAAUW,GACzBd,EAAIG,KAAK,EAAG,EAAG,WAAaY,GAyBxBK,CAAgBpB,EAAKN,EAAQsB,EAAmBpL,EAAGoL,EAAmBnL,EAAGiL,EAAYC,OAGzFf,EAAIqB,KAAKT,EAAW,SC2BPU,8MA7EbC,MAAQ,CACNC,aAAc,IACdC,cAAe,OAGjBC,oBAAsB,WACpB,IAAMC,EAAaC,EAAKC,eAClBnK,EAAoB,CAAC9B,EAAGgM,EAAKL,MAAMC,aAAc3L,EAAG+L,EAAKL,MAAME,eAErE,OADoBjK,GAAkB,cAAemK,EAAYjK,MAInEmK,aAAe,WACb,IAAMC,EAAYvN,GAAMqN,EAAKG,MAAMxP,cAC/ByP,EAAWxN,GAAKoN,EAAKG,MAAMxP,cACzB0P,EAAgBpJ,GAASmJ,GAG/B,OAFAA,EAAWlL,GAAckL,EAAU,CAACpM,EAAGqM,EAAepM,EAAG,IACtCa,GAAUoL,EAAWE,MAI1CE,eAAiB,WAGf,IAAMP,EAAaC,EAAKC,eAClBnK,EAAoB,CAAC9B,EAAGgM,EAAKL,MAAMC,aAAc3L,EAAG+L,EAAKL,MAAME,eACrE,OAAOzI,GAAqB2I,EAAYjK,MAG1CyK,wBAA0B,WACxB,IAAMR,EAAaC,EAAKC,eAClB9I,EAAc6I,EAAKM,iBAGzB,MAAO,CAACpJ,MAFMD,GAAS8I,GAAc5I,EAEfH,OADPH,GAAUkJ,GAAc5I,MAQzCqJ,iBAAmB,WACjBR,EAAKS,SAAS,CAACb,aAAcI,EAAKU,sBAAsBC,cACxDX,EAAKS,SAAS,CAACZ,cAAeG,EAAKU,sBAAsBE,eACzDZ,EAAKa,kGANLC,KAAKN,oDASK,IAAAO,EAAAD,KACV,OACExK,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,gBACb1K,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,iBACb1K,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,oBACb1K,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,oBAAf,gBAGA1K,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,mBAAf,iBAGA1K,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,cACb1K,EAAAC,EAAAC,cAACyK,GAAD,CAAatQ,aAAcmQ,KAAKX,MAAMxP,aACzBiP,aAAckB,KAAKnB,MAAMC,aACzBC,cAAeiB,KAAKnB,MAAME,cAC1B1I,YAAa2J,KAAKR,oBAE/BhK,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,gBAGjB1K,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,iBAAiBnL,GAAG,iBAAiBqL,IAAM,SAACR,GAAD,OAA2BK,EAAKL,sBAAwBA,IAClHpK,EAAAC,EAAAC,cAAA,OAAKU,MAAK,GAAAjC,OAAK6L,KAAKP,0BAA0BrJ,MAApC,MAA+CF,OAAM,GAAA/B,OAAK6L,KAAKP,0BAA0BvJ,OAApC,OAC7D8J,KAAKhB,iCAvEQqB,aAiFrBC,8MACJC,mBAAqB,SAACC,GAEpB,IAAMxD,EAASP,GAAqBgE,EAAKpB,MAAMP,aACZ2B,EAAKpB,MAAMN,cACX0B,EAAKpB,MAAMhJ,aACxC4H,EAAcP,GAAmCV,GACjDM,EAAMH,KAEZE,GAAgBC,EAAKN,GACrBgB,GAAsBV,EAAKN,EAAQiB,EAFlB,mFAOjB,OACEzI,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,sBAAsBQ,QAASV,KAAKO,oBAAnD,uBAhBoBF,aCuBXM,8MA/Gb9B,MAAQ,CACJ+B,iBAAkB,EAClB/Q,aAAcJ,GAAiB,CAACG,cAAc,IAC9CiR,iBAAkBpR,GAAiB,IACnCqR,iBAAkB,GAClBC,YAAa,OAGjBC,kBAAoB,SAACC,GACnB,IAAIC,EAAiBhC,EAAKL,MAAMhP,aAChCqR,EAAehC,EAAKL,MAAM+B,kBAAkBzQ,YAAcgR,WAAWF,GACrE/B,EAAKS,SAAS,CAAC9P,aAAcqR,OAG/BE,sBAAwB,SAACH,GACvB,IAAIC,EAAiBhC,EAAKL,MAAMgC,iBAChCK,EAAehC,EAAKL,MAAM+B,kBAAkBzQ,YAAcgR,WAAWF,GACrE/B,EAAKS,SAAS,CAACkB,iBAAkBK,OAGnCG,gBAAkB,WAChB,IAAIC,EAAsBpC,EAAKL,MAAM+B,iBAAmB,EACnC1B,EAAKL,MAAMhP,aAChCqP,EAAKS,SAAS,CAACiB,iBAAkBU,EACnBP,YAAW,GAAA5M,OAAK+K,EAAKL,MAAMhP,aAAayR,GAAqBnR,YAAlD,gBAI3BoR,aAAe,SAACf,GACdtB,EAAKS,SAAS,CAACoB,YAAaP,EAAMgB,cAAcP,WAGlDQ,YAAc,WACZvC,EAAKS,SAAS,CAACoB,YAAa,KAC5BW,QAAQ7J,IAAIqH,EAAKyC,wBAAwBzR,cACnCwR,QAAQ7J,IAAIqH,EAAKyC,wBAAwBxR,gBAGjDyR,gBAAkB,WAChB,IAAIlP,EAAQwM,EAAKL,MAAMkC,YAAYc,QAAQ,UAAW,IACtD,GAAKpP,GAAsBC,GAEpB,CACHwM,EAAKS,SAAS,CAACmB,iBAAkB,KACjC,IAAMgB,EAAqB5C,EAAKL,MAAMgC,iBAAiB3B,EAAKL,MAAM+B,kBAAkBzQ,YACpF+O,EAAKkC,sBAAsB1O,GACvBG,GAAaqM,EAAKL,MAAMgC,mBAC1B3B,EAAKkC,sBAAsBU,GAC3B5C,EAAKS,SAAS,CAACmB,iBAAkB,0KAEjC5B,EAAK8B,kBAAkBtO,GACvBwM,EAAKmC,wBAVTnC,EAAKS,SAAS,CAACmB,iBAAkB,0DAerCiB,gBAAkB,WAChB,IAAIT,EAAsBpC,EAAKL,MAAM+B,iBAAmB,EACxD1B,EAAKS,SAAS,CAACiB,iBAAkBU,EACnBP,YAAW,GAAA5M,OAAK+K,EAAKL,MAAMhP,aAAayR,GAAqBnR,YAAlD,WACX2Q,iBAAkB,QAGlCkB,iBAAmB,WACjB,OAAO9C,EAAKL,MAAM+B,mBAAqB1B,EAAKL,MAAMhP,aAAa+B,OAAS,KAG1EqQ,eAAiB,WACf,OAAuC,IAAhC/C,EAAKL,MAAM+B,oBAGpBsB,gBAAkB,SAAC1B,GACjBtB,EAAKG,MAAM8C,QAAQN,QAAQ,uBAG7BF,sBAAwB,WACtB,OAAOzC,EAAKL,MAAMhP,aAAaqP,EAAKL,MAAM+B,2FAI1C,OACEpL,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,gBACb1K,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,iBACb1K,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,oBACXF,KAAKnB,MAAM+B,iBAAmB,GAAKpL,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,oBAAf,IAAqCF,KAAK2B,wBAAwBzR,aAAlE,KAAmF8P,KAAKnB,MAAM+B,iBAA9F,MAAmHZ,KAAKnB,MAAMhP,aAAa+B,OAAS,EAApJ,KACrC4D,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,mBACXF,KAAK2B,wBAAwB3R,UAEjCwF,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,cACXF,KAAKnB,MAAM+B,iBAAmB,GAAKpL,EAAAC,EAAAC,cAAA,SACnCwK,UAAU,mBACVkC,QAASpC,KAAKyB,YACdY,SAAUrC,KAAKuB,aACfe,KAAK,OACLrS,KAAK,QACLgR,MAAQjB,KAAKnB,MAAMkC,cAEnBf,KAAKiC,kBAAoBzM,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,qBAAqBQ,QAAUV,KAAK+B,iBAAnD,WACxB/B,KAAKgC,oBAAsBxM,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,qBAAqBQ,QAAUV,KAAK4B,iBAAnD,UAC5B5B,KAAKgC,oBAAsBxM,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,uBAAuBQ,QAAUV,KAAKkC,iBAArD,WAE/B1M,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,cACbF,KAAKnB,MAAMiC,mBAGftL,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,mBAAmBqC,IAAMvC,KAAK2B,wBAAwB7R,MAAQ0S,IAAI,yBA3GhEnC,sBCNZoC,kBCoCAC,8MA3Bb7D,MAAQ,CACNhP,aAAcJ,GAAiB,OAGjCkT,gBAAkB,SAACnC,GACjB2B,GAAQN,QAAQ,8EAGT,IAAA5B,EAAAD,KACP,OACExK,EAAAC,EAAAC,cAACkN,EAAA,EAAD,CAAQT,QAASA,IACf3M,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,OACb1K,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,YAAYQ,QAASV,KAAK2C,iBACvCnN,EAAAC,EAAAC,cAAA,OAAKwK,UAAU,aAAaqC,IAAKM,IAAYL,IAAI,eAEnDhN,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOC,OAAK,EAAC1O,KAAK,IAAI2O,OAAQ,SAAC3D,GAAD,OAC5B7J,EAAAC,EAAAC,cAACuN,GAAD,CAAcd,QAASA,GAAStS,aAAcoQ,EAAKpB,MAAMhP,kBAE3D2F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOC,OAAK,EAAC1O,KAAK,mBAAmB2O,OAAQ,SAAC3D,GAAD,OAC3C7J,EAAAC,EAAAC,cAACwM,GAAD,CAAcrS,aAAcoQ,EAAKpB,MAAMhP,2BApBjCwQ,aCEE6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASP,OAAOxN,EAAAC,EAAAC,cAAC8N,GAAD,MAAS3G,SAASC,eAAe,SD2H3C,kBAAmB2G,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.bd74dd6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/title.198fa205.svg\";","module.exports = __webpack_public_path__ + \"static/media/dressform.b65eb639.svg\";","module.exports = __webpack_public_path__ + \"static/media/shoulder.3547d7bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/neck.664e9664.svg\";","module.exports = __webpack_public_path__ + \"static/media/waist.cc12c943.svg\";","module.exports = __webpack_public_path__ + \"static/media/frontLength.c7686576.svg\";","module.exports = __webpack_public_path__ + \"static/media/side.54e89cb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/highHip.27dbde61.svg\";","module.exports = __webpack_public_path__ + \"static/media/highHipDepth.a0c92ddc.svg\";","module.exports = __webpack_public_path__ + \"static/media/lowHip.95c4ab8b.svg\";","module.exports = __webpack_public_path__ + \"static/media/lowHipDepth.4e9e5f38.svg\";","module.exports = __webpack_public_path__ + \"static/media/backLength.059e825e.svg\";","module.exports = __webpack_public_path__ + \"static/media/figureLength.dfe9cdef.svg\";","module.exports = __webpack_public_path__ + \"static/media/figureBreadth.3ba60b1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/crossFront.dbd5a532.svg\";","module.exports = __webpack_public_path__ + \"static/media/crossBack.67e23ba6.svg\";","module.exports = __webpack_public_path__ + \"static/media/bust.9f415f7a.svg\";","module.exports = __webpack_public_path__ + \"static/media/underBust.e2d0ef3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/armhole.69760c20.svg\";","import _ from 'lodash';\n\nimport dressform from 'images/measurements/dressform.svg'\nimport shoulder from 'images/measurements/shoulder.svg'\nimport neck from 'images/measurements/neck.svg'\nimport waist from 'images/measurements/waist.svg'\nimport frontLength from 'images/measurements/frontLength.svg'\nimport side from 'images/measurements/side.svg'\nimport highHip from 'images/measurements/highHip.svg'\nimport highHipDepth from 'images/measurements/highHipDepth.svg'\nimport lowHip from 'images/measurements/lowHip.svg'\nimport lowHipDepth from 'images/measurements/lowHipDepth.svg'\nimport backLength from 'images/measurements/backLength.svg'\nimport figureLength from 'images/measurements/figureLength.svg'\nimport figureBreadth from 'images/measurements/figureBreadth.svg'\nimport crossFront from 'images/measurements/crossFront.svg'\nimport crossBack from 'images/measurements/crossBack.svg'\nimport bust from 'images/measurements/bust.svg'\nimport underbust from 'images/measurements/underBust.svg'\nimport armhole from 'images/measurements/armhole.svg'\n\n\n\nexport const DISPLAY_FRACTION_TO_FILL = 0.9;\nexport const EASE = 3/8;\nexport const WAISTSHAPING = 3/8;\nexport const SHOULDERDARTMOVE = 1/4;\nexport const a4 = {\n    height: 11,\n    width: 8.5,\n};\n\nexport const get_measurements = ({use_defaults = true}) => {\n    const measurements = [\n        {\n            image: dressform,\n            helpText: 'This tutorial will help you take your measurements, and generate a bodice sloper for feminine body types. You\\'ll need a tape measure, and ribbon or string. \\n\\nFor best results, take measurements standing up straight, and get someone else to measure you. \\n\\n Email easysloper@gmail.com with suggestions!\\n\\n'},\n\n        {\n            name: 'shoulder',\n            friendlyName: 'Shoulder',\n            measurement: 4.75,\n            image: shoulder,\n            helpText: 'The length between the base of the neck and the point above the armpit crease.'},\n        {\n        name: 'neck',\n            friendlyName: 'Neck',\n            measurement: 14.25,\n            image: neck,\n            helpText: 'The neck circumference. The tape measure goes to a point in the crevice between the collarbones.'},\n        {\n            name: 'waist',\n            friendlyName: 'Waist',\n            measurement: 26,\n            image: waist,\n            helpText: 'The circumference of the most narrow part of the torso, generally a quarter inch above the belly button. Keep a ribbon tied around your waist (tightly enough to stay in place but not uncomfortable). Later measurements will refer back to this. Make sure the tape measure is level all the way around.'},\n        {\n            name: 'frontLength',\n            friendlyName: 'Front Length',\n            measurement: 15.5,\n            image: frontLength,\n            helpText: 'The length between the point in the crevice between the collarbones and the waist ribbon.'},\n        {\n            name: 'side',\n            friendlyName: 'Side',\n            measurement: 9,\n            image: side,\n            helpText: 'The length from the armpit to the waist. Take a ruler (or any flat and long object), and tuck it under your armpit . Measure from the top of the ruler to the waist ribbon.'},\n        {\n            name: 'highHip',\n            friendlyName: 'High Hip',\n            measurement: 34,\n            image: highHip,\n            helpText: 'The circumference measured at the top of the hip curve, generally 3-4\" below the waist ribbon. Make sure the tape measure is level all the way around.'},\n        {\n            name: 'highHipDepth',\n            friendlyName: 'High Hip Depth',\n            measurement: 4.5,\n            image: highHipDepth,\n            helpText: 'The length between the waist ribbon and the high hip. Keep the measuring tape flush against your side.'},\n        {\n            name: 'lowHip',\n            friendlyName: 'Low Hip',\n            measurement: 37,\n            image: lowHip,\n            helpText: 'The circumference measured at the fullest part of the bottom. Make sure the tape measure is level all the way around.'},\n        {\n            name: 'lowHipDepth',\n            friendlyName: 'Low Hip Depth',\n            measurement: 8.5,\n            image: lowHipDepth,\n            helpText: 'The length between the waist ribbon and the low hip. Keep the measuring tape flush against your side.'},\n        {\n            name: 'backLength',\n            friendlyName: 'Back Length',\n            measurement: 17,\n            image: backLength,\n            helpText: 'The length between the point at the base of the neck and the waist ribbon. The base of the neck is the vertebrae that bumps up when you tilt your head forward. Stand up straight and look forward when taking this measurement.'},\n        {\n            name: 'figureLength',\n            friendlyName: 'Figure Length',\n            measurement: 8.5,\n            image: figureLength,\n            helpText: 'The distance between the point in the crevice between the collarbones and the center of the left breast.'},\n        {\n            name: 'figureBreadth',\n            friendlyName: 'Figure Breadth',\n            measurement: 8,\n            image: figureBreadth,\n            helpText: 'The length between the center of the breasts.'},\n        {\n            name: 'crossFront',\n            friendlyName: 'Cross Front',\n            measurement: 12.5,\n            image: crossFront,\n            helpText: 'The length between the top of your armpit creases. This is a flat measurement, don\\'t wrap the measuring tape around your chest.'},\n        {\n            name: 'crossBack',\n            friendlyName: 'Cross Back',\n            measurement: 13.25,\n            image: crossBack,\n            helpText: 'The length between the top of your armpit creases on your backside. Keep a natural, relaxed posture during this measurement.'},\n        {\n            name: 'bust',\n            friendlyName: 'But',\n            measurement: 36,\n            image: bust,\n            helpText: 'The circumference around the chest, with the tape measure passing through the center of the breasts.'},\n        {\n            name: 'underBust',\n            friendlyName: 'Under Bust',\n            measurement: 29,\n            image: underbust,\n            helpText: 'Your circumference just under your breasts, making sure that the tape is lying straight across your back'},\n        {\n            name: 'armhole',\n            friendlyName: 'Armhole',\n            measurement: 16.75,\n            image: armhole,\n            helpText: 'The circumference around the arm, going over to the top of the shoulder. Measure it with your arm down flat against your side.'},\n    ]\n    if (!use_defaults) {\n        _.each(measurements, (entry) => {\n            entry.measurement = 0;\n        })\n    }\n    return measurements;\n};\n","import _ from 'lodash';\nimport { front,\n        back } from 'slopers/bodice.js'\n\nexport const convertMeasurements = (measurements) => {\n  const convertedMeasurements = {\n\t  neck: createFrontBack(get(\"neck\", measurements).measurement, 6, 1/4, 3/8),\n\t  shoulder: get(\"shoulder\", measurements).measurement,\n\t  length: {\n\t  \tfront: get(\"frontLength\", measurements).measurement,\n\t  \tback: get(\"backLength\", measurements).measurement\n\t  },\n\t  figureLength: get(\"figureLength\", measurements).measurement,\n\t  figureBreadth: get(\"figureBreadth\", measurements).measurement / 2,\n\t  cross: {\n\t  \tfront: get(\"crossFront\", measurements).measurement / 2,\n\t  \tback: get(\"crossBack\", measurements).measurement / 2,\n\t  },\n\t  bust: createFrontBack(get(\"bust\", measurements).measurement, 4, 1/4, -1/4),\n\t  cup: get(\"bust\", measurements).measurement - get(\"underBust\", measurements).measurement,\n\t  waist: createFrontBack(get(\"waist\", measurements).measurement, 4, 1/4, -1/4),\n\t  hip: {\n\t  \thigh: createFrontBack(get(\"highHip\", measurements).measurement, 4, 1/4, -1/4),\n\t  \tlow: createFrontBack(get(\"lowHip\", measurements).measurement, 4, 1/4, -1/4),\n\t  },\n\t  side: get(\"side\", measurements).measurement,\n\t  armhole: createFrontBack(get(\"armhole\", measurements).measurement, 2, -1/4, 1/4),\n  };\n\n  convertedMeasurements.hip.high.depth = get(\"highHipDepth\", measurements).measurement;\n  convertedMeasurements.hip.low.depth = get(\"lowHipDepth\", measurements).measurement;\n  return convertedMeasurements;\n};\n\nexport const createFrontBack = (measurement, divideBy=1, frontChange=0, backChange=0) => {\n\tconst front = measurement / divideBy + frontChange;\n\tconst back = measurement / divideBy + backChange;\n\treturn {front: front, back: back};\n};\n\nexport const get = (name, measurements) => {\n    return _.find(measurements, (entry) => {\n    return entry.name === name;\n  })\n}\n\nexport const isPositiveValidNumber = (input) => {\n    const positiveValidNumber = RegExp('^[+]?([0-9]+(?:[.][0-9]*)?|.[0-9]+)$')\n    return positiveValidNumber.test(input) && input > 0\n}\n\nexport const brokePattern = (measurements) => {\n\tlet brokePattern = false;\n\ttry {\n          // Include these in the try block because they will generate an error if measurements didn't work\n          front(measurements);\n          back(measurements);\n        }\n        catch(error) {\n          brokePattern = true;\n        }\n\n  return brokePattern\n}","export const absMovePen = (end) => {\n  return [{command: 'M', end: {x: end.x, y: -end.y}, absolute: true}];\n}\n\n// relMovePen has strange behavior if its called on a function with closePath called.\nexport const relMovePen = (end) => {\n  return [{command: 'm', end: {x: end.x, y: -end.y}, absolute: false}];\n}\n\nexport const drawAbsLine = (end) => {\n  return [{command: 'L', end: {x: end.x, y: -end.y}, absolute: true}];\n}\n\nexport const drawRelLine = (end) => {\n  return [{command: 'l', end: {x: end.x, y: -end.y}, absolute: false}];\n}\n\n// This function draws an abs quadratic bezier with a specified control point (instead of specifying the control point params)\nexport const drawAbsBez = (control, end) => {\n  return [{command: 'Q', control: {x: control.x, y: -control.y}, end: {x: end.x, y: -end.y}, absolute: true}];\n}\n","export const calculateArmholeShoulderCenterFrontDart = (cup) => {\n\tconst dartWidth = Math.min(.125 * cup + .25, .75);\n\treturn dartWidth;\n}\n\nexport const calculateSideDart = (cup) => {\n\tconst dartWidth = Math.min(.25 * cup + .5, 1.5);\n\treturn dartWidth;\n}\n\nexport const calculateWaistDart = (waistMeasurement, lowHipMeasurement) => {\n\tconst waitLowHipDiff = lowHipMeasurement - waistMeasurement;\n\tconst dartWidth = Math.max(.085 * waitLowHipDiff + .1, 3/8);\n\treturn dartWidth;\n}\n","import React from 'react';\nimport raphael from 'raphael';\nimport _ from 'lodash';\nimport { DISPLAY_FRACTION_TO_FILL } from '../constants';\n\nexport const joinPaths = (path1, path2) => {\n  return path1.concat(path2);\n}\n\nexport const translatePath = (path, translation) => {\n  const translatedPath = _.map(path, (stroke) => {\n    let thisStroke = _.cloneDeep(stroke);\n    if (stroke.absolute) {\n      stroke.control && (thisStroke.control = translateStroke(stroke.control, translation));\n      stroke.end && (thisStroke.end = translateStroke(stroke.end, translation));\n    }\n    return thisStroke;\n  });\n  return translatedPath;\n}\n\nexport const translateStroke = (strokePoint, translation) => {\n  const translatedStroke = {};\n  translatedStroke.x = strokePoint.x + translation.x;\n  translatedStroke.y = strokePoint.y + translation.y;\n  return translatedStroke\n}\n\nexport const createPathElement = (id, path, displayDimensions) => {\n  let pathElement = addPathToElement(id, path);\n  pathElement = centerAndScalePath(pathElement, path, displayDimensions);\n  return pathElement;\n}\n\nexport const createFormattedPath = (path) => {\n  let formattedPath = \"\";\n  _.each(path, (stroke) => {\n    formattedPath = concatStrokes(formattedPath, stroke.command);\n    if (stroke.control) {\n      formattedPath = concatStrokes(formattedPath, stroke.control.x);\n      formattedPath = concatStrokes(formattedPath, stroke.control.y);\n    }\n    if (stroke.end) {\n      formattedPath = concatStrokes(formattedPath, stroke.end.x);\n      formattedPath = concatStrokes(formattedPath, stroke.end.y);\n    }\n  });\n  return formattedPath;\n}\n\nexport const concatStrokes = (formattedPath, strokeToAdd) => {\n  formattedPath = formattedPath.concat(strokeToAdd);\n  formattedPath = formattedPath.concat(\" \");\n  return formattedPath;\n}\n\nexport const addPathToElement =(id, path) => {\n  const formattedPath = createFormattedPath(path);\n  return <path\n      id={id}\n      d={formattedPath}\n      vectorEffect='non-scaling-stroke'\n      stroke='black'\n      strokeWidth='.3'\n      fill='none'\n      >\n    </path>\n}\n\nexport const getHeight = (path) => {\n  const formattedPath = createFormattedPath(path);\n  const height = raphael.pathBBox(formattedPath).height;\n  return height\n}\n\nexport const getWidth = (path) => {\n  const formattedPath = createFormattedPath(path);\n  const width = raphael.pathBBox(formattedPath).width;\n  return width\n}\n\nexport const getTopLeftX = (path) => {\n  const formattedPath = createFormattedPath(path);\n  const topLeftX = raphael.pathBBox(formattedPath).x;\n  return topLeftX\n}\n\nexport const getTopLeftY = (path) => {\n  const formattedPath = createFormattedPath(path);\n  const topLeftY = raphael.pathBBox(formattedPath).y;\n  return topLeftY\n}\n\nexport const centerAndScalePath = (pathElement, path, displayDimensions) => {\n  const scaleFactor = calculateScaleFactor(path, displayDimensions);\n  const translation = reflectAboutXAxis(path, scaleFactor);\n  const centeringString = `translate(${translation.x} ${translation.y}) scale(${scaleFactor})`;\n  return <g transform={centeringString}> {pathElement} </g>\n}\n\nexport const calculateScaleFactor = (path, displayDimensions) => {\n  const widthRatio = displayDimensions.x / getWidth(path);\n  const heightRatio = displayDimensions.y / getHeight(path);\n  const scaleFactor = (widthRatio < heightRatio) ? (widthRatio * DISPLAY_FRACTION_TO_FILL) : (heightRatio * DISPLAY_FRACTION_TO_FILL);\n  return scaleFactor;\n}\n\nexport const reflectAboutXAxis = (path, scaleFactor) => {\n  const translateY = getHeight(path) * scaleFactor;\n  return {x: 0, y: translateY}\n}\n","import { absMovePen,\n         drawAbsLine,\n         drawAbsBez, } from 'svgHelpers/drawing'\nimport { createFormattedPath } from 'svgHelpers/elements'\n         \nimport _ from 'lodash';\nimport { intersect, shape } from 'svg-intersections';\n\n\nexport const t0FromTQuadraticBezier = (P0, P1, P2, T) => {\n  /*\n  Given a point T along the quadratic bezier curve defined by control points P0,\n  P1, and P2, return the value t0 of the parameter t such\n  that the point (x(t), y(t)) (the parametric equations of the bezier curve) is\n  T.\n  B(t) = (x(t), y(t)) = T\n\n  Equations for quadratic bezier curve are found here:\n  https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Quadratic_B.C3.A9zier_curves\n\n  ARGS:\n  - P0, P1, P2 are the control points (if we're saying end points are control\n      points) of the bezier\n      (P0: end point, P1: control point, P2: end point)\n      Each point is represented {x: _, y: _}\n  - T is a point on the curve\n  RETURNS:\n  - t0 is the value to plug into x(t) and y(t) to yield T\n  */\n\n  // Equation for quadratic bezier:\n  // B(t) = ((1 - t)^2)*P0 + 2*(1 - t)*t*P1 + (t^2)*P2\n  // Plug in T for B(t), group coefficients, and arrange on one side\n  // 0 = (P0 - 2P1 + P2)*t^2 + (-2P0 + 2P1)*t + (P0 - T)\n  // Having a = P0 - 2P1 + P2, b = -2P0 + 2P1, and c = P0 - T, plug into the\n  // quadratic equation t = (-b +- sqrt(b^2 - 4ac)) / 2a\n\n  const quadraticEquation = (a, b, c) => {\n    // (-b +- sqrt(b^2 - 4ac)) / 2a\n    // Returns a list of answers because there can be multiple solutions\n    return [(-b + Math.sqrt((b**2 - 4*a*c))) / (2*a),\n            (-b - Math.sqrt((b**2 - 4*a*c))) / (2*a)];\n  };\n\n  const quadraticEquationForBezier = component => {\n    // component is 'x' or 'y'\n    const a = P0[component] - 2*P1[component] + P2[component];\n    const b = -2*P0[component] + 2*P1[component];\n    const c = P0[component] - T[component];\n    return a !== 0 ? quadraticEquation(a, b, c) : [-c / b];\n  };\n\n  const t0_x = quadraticEquationForBezier('x');\n  const t0_y = quadraticEquationForBezier('y');\n\n  // take the t which shows up in both the x and y\n  let t;\n  const MILLION = 1000 * 1000;\n  _.each(t0_x, t_x => {\n    const rounded_t_x = Math.round(t_x * MILLION) / MILLION;\n    _.each(t0_y, t_y => {\n      const rounded_t_y = Math.round(t_y * MILLION) / MILLION;\n      if (rounded_t_x === rounded_t_y) {\n        t = rounded_t_x;\n      }\n    });\n  });\n  return t;\n};\n\n\nexport const subdivideQuadraticBezierFromt0 = (P0, P1, P2, t0) => {\n  /*\n  Split a quadratic bezier curve into 2 quadratic bezier curves\n\n  Strategy based on subdivision algorithm (with n = 2) explained here:\n  http://web.mit.edu/hyperbook/Patrikalakis-Maekawa-Cho/node13.html\n\n  ARGS:\n  - P0, P1, P2 are the control points (if we're saying end points are control\n      points) of the original bezier\n      (P0: end point, P1: control point, P2: end point)\n      Each point is represented {x: _, y: _}\n  - t0 is between 0 and 1, it is the value of the parameter t that, plugged\n      into x(t) and y(t), gives you the point at which to split the curve\n  RETURNS:\n  - [[b, b, b], [b, b, b]] is two lists of control points, one list for each of\n      the resulting curves, each list having (end point, control point, end\n      point)\n  */\n\n  const multilyPoint = (A, factor) => ({x: A.x * factor, y: A.y * factor});\n  const addPoints = (A, B) => ({x: A.x + B.x, y: A.y + B.y});\n\n  // Using this recursive equation:\n  // b_i_k(t0) = (1 - t0) * b_{i-1}_{k-1} + t0 * b_i_{k-1}\n  // defined for k=1...n, i=k...n\n  // We get the properties\n  // - b_i_0 are the control points of the original curve\n  // - b_n_n is the point at which to split the curve (t = t0)\n  // - (b_0_0, b_1_1, ..., b_n_n) and (b_n_n, b_n_{n-1}, ..., b_n_0) are the\n  //    control point lists of the new curves\n\n  // bVals[i][k] = b_i_k\n  const bVals = _.map(_.range(3), whatevs => _.map(_.range(3), null));\n\n  // this performs one iteration of the recursive step, it is to be called on\n  // values of i and k in such an order that the bVals necessary for calculating\n  // the answer are already non-null\n  const calculateBVal = (i, k) => {\n    // Recursive equation: b_i_k(t0) = (1 - t0) * b_{i-1}_{k-1} + t0 * b_i_{k-1}\n    bVals[i][k] = addPoints(\n      multilyPoint(bVals[i-1][k-1], (1 - t0)),\n      multilyPoint(bVals[i][k-1], t0)\n    );\n  };\n\n  // initialize the control points of the original curve\n  bVals[0][0] = P0;\n  bVals[1][0] = P1;\n  bVals[2][0] = P2;\n\n  // fill bVals in order so that the necessary values are non-null\n  calculateBVal(1, 1);\n  calculateBVal(2, 1);\n  calculateBVal(2, 2);\n\n  return [\n    [bVals[0][0], bVals[1][1], bVals[2][2]],\n    [bVals[2][2], bVals[2][1], bVals[2][0]],\n  ];\n};\n\n\nexport const subdivideQuadraticBezierFromT = (P0, P1, P2, T) => {\n  /*\n  Same functionality as subdivideQuadraticBezierFromt0, but take a point T that\n  lies on the curve, instead of a t0 between 0 and 1.\n  */\n  const t0 = t0FromTQuadraticBezier(P0, P1, P2, T);\n  return subdivideQuadraticBezierFromt0(P0, P1, P2, t0);\n};\n\n\nexport const quadraticBezierLength = (P0, P1, P2) => {\n  const ax = P0.x - 2 * P1.x + P2.x;\n  const ay = P0.y - 2 * P1.y + P2.y;\n  const bx = 2 * P1.x - 2 * P0.x;\n  const by = 2 * P1.y - 2 * P0.y;\n  const A = 4 * (ax * ax + ay * ay);\n  const B = 4 * (ax * bx + ay * by);\n  const C = bx * bx + by * by;\n\n  const Sabc = 2 * Math.sqrt(A+B+C);\n  const A_2 = Math.sqrt(A);\n  const A_32 = 2 * A * A_2;\n  const C_2 = 2 * Math.sqrt(C);\n  const BA = B / A_2;\n\n  return (A_32 * Sabc + A_2 * B * (Sabc - C_2) + (4 * C * A - B * B) * Math.log((2 * A_2 + BA + Sabc) / (BA + C_2))) / (4 * A_32);\n}\n\nexport const calculateLineToLineIntersection = (P0, P1, P2, P3) => {\n    /*\n    P0 and P1 define the first line, P2 and P3 define the second line\n    */\n\n    const path0 = createFormattedPath([\n      ...absMovePen(P0),\n      ...drawAbsLine(P1)\n    ]);\n\n    const path1 = createFormattedPath([\n      ...absMovePen(P2),\n      ...drawAbsLine(P3)\n    ]);\n\n    const intersectionPoint2D = intersect(\n      shape(\"path\", {d: path0}),\n      shape(\"path\", {d: path1})\n    );\n\n    const intersectionPoint = {x: intersectionPoint2D.points[0].x, y: intersectionPoint2D.points[0].y};\n    return intersectionPoint\n  }\n\nexport const calculateLineToBezierIntersection = (P0, P1, P2, P3, P4) => {\n  /*\n  P0 and P1 define the first line, P2, P3, and P4 define the second line\n  */\n\n  const path0 = createFormattedPath([\n    ...absMovePen(P0),\n    ...drawAbsLine(P1)\n  ]);\n\n  const path1 = createFormattedPath([\n    ...absMovePen(P2),\n    ...drawAbsBez(P3, P4)\n  ]);\n\n  const intersectionPoint2D = intersect(\n    shape(\"path\", {d: path0}),\n    shape(\"path\", {d: path1})\n  );\n\n  const intersectionPoint = {x: intersectionPoint2D.points[0].x, y: intersectionPoint2D.points[0].y};\n  return intersectionPoint\n}\n\nexport const calculateCoordAlongLine = (P0, P2, newLength) => {\n  /* This function takes in a line that goes from P0 to P2, and returns the coordinates of point\n  P1, the point along that line of length newLength\n  P0: Start of initial line\n  P1: End of initial line\n  newLength: Length of the new line\n  */\n  const P1 = {}\n  const originalHeight = P2.y -  P0.y;\n  const originalWidth = P2.x - P0.x;\n  const originalLength = Math.sqrt(Math.pow(originalHeight, 2) + Math.pow(originalWidth, 2))\n  P1.x = P0.x + originalWidth * (newLength/originalLength);\n  P1.y = P0.y + originalHeight * (newLength/originalLength);\n\n  return P1;\n}","import {EASE,\n        WAISTSHAPING,\n        SHOULDERDARTMOVE } from 'constants.js'\nimport { convertMeasurements,\n         get } from 'measurementHelpers'\t\nimport { absMovePen, \n\t\t\t\t drawAbsLine, \n\t\t\t\t drawAbsBez } from 'svgHelpers/drawing'\nimport { calculateArmholeShoulderCenterFrontDart,\n         calculateSideDart,\n         calculateWaistDart } from 'slopers/darts'\nimport { quadraticBezierLength,\n         calculateLineToLineIntersection,\n         calculateLineToBezierIntersection,\n         calculateCoordAlongLine } from 'svgHelpers/pathMath.js'\n\n\nexport const front = (measurements) => {\n\n  const convertedMeasurements = convertMeasurements(measurements);\n  const fc = calculateFrontCoordinates(measurements, convertedMeasurements);\n\n  const frontPath = [\n    // Draw the sloper outline\n    ...absMovePen({x: fc.x0, y: fc.y14}),\n    ...drawAbsLine({x: fc.x0, y: fc.y0}),\n    ...drawAbsLine({x: fc.x20, y: fc.y0}),\n    ...drawAbsLine({x: fc.x19, y: fc.y1}),\n    ...drawAbsLine({x: fc.x13, y: fc.y3}),\n    ...drawAbsBez({x: fc.x16, y: fc.y5}, {x: fc.x18, y: fc.y9}),\n    ...drawAbsBez({x: fc.x10, y: fc.y9}, {x: fc.x10, y: fc.y12}),\n    ...drawAbsLine({x: fc.x14, y: fc.y15}),\n    ...drawAbsLine({x: fc.x8, y: fc.y16}),\n    ...drawAbsBez({x: fc.x9, y: fc.y13}, {x: fc.x5, y: fc.y7}),\n    ...drawAbsLine({x: fc.x3, y: fc.y17}),\n    ...drawAbsLine({x: fc.x1, y: fc.y18}),\n    ...drawAbsBez({x: fc.x1, y: fc.y14}, {x: fc.x0, y: fc.y14}),\n\n    // Waist darts\n    ...absMovePen({x: fc.x5, y: fc.y0}),\n    ...drawAbsLine({x: fc.x5, y: fc.y1}),\n    ...drawAbsLine({x: fc.x2, y: fc.y2}),\n    ...drawAbsLine({x: fc.x2, y: fc.y3}),\n    ...drawAbsLine({x: fc.x5, y: fc.y4}),\n    ...drawAbsLine({x: fc.x5, y: fc.y7}),\n\n    ...absMovePen({x: fc.x5, y: fc.y1}),\n    ...drawAbsLine({x: fc.x6, y: fc.y2}),\n    ...drawAbsLine({x: fc.x6, y: fc.y3}),\n    ...drawAbsLine({x: fc.x5, y: fc.y4}),\n\n    // Armhole dart\n    ...absMovePen({x: fc.x5, y: fc.y7}),\n    ...drawAbsLine({x: fc.x11, y: fc.y11}),\n    ...absMovePen({x: fc.x5, y: fc.y7}),\n    ...drawAbsLine({x: fc.x12, y: fc.y10}),\n\n    // Side dart\n    ...absMovePen({x: fc.x5, y: fc.y7}),\n    ...drawAbsLine({x: fc.x15, y: fc.y6}),\n    ...absMovePen({x: fc.x5, y: fc.y7}),\n    ...drawAbsLine({x: fc.x17, y: fc.y8}),\n\n    ]\n\n\treturn frontPath;\n}\n\nexport const back = (measurements) => {\n\n  const convertedMeasurements = convertMeasurements(measurements);\n  const bc = calculateBackCoordinates(measurements, convertedMeasurements);\n\n  const backPath = [\n    // Draw the sloper outline\n    ...absMovePen({x: bc.x0, y: bc.y0}),\n    ...drawAbsLine({x: bc.x18, y: bc.y0}),\n    ...drawAbsLine({x: bc.x17, y: bc.y2}),\n    ...drawAbsLine({x: bc.x16, y: bc.y3}),\n    ...drawAbsLine({x: bc.x18, y: bc.y8}),\n    ...drawAbsLine({x: bc.x18, y: bc.y10}),\n    ...drawAbsBez({x: bc.x15, y: bc.y10}, {x: bc.x15, y: bc.y14}),\n    ...drawAbsLine({x: bc.x8, y: bc.y13}),\n    ...drawAbsLine({x: bc.x11, y: bc.y9}),\n    ...drawAbsLine({x: bc.x7, y: bc.y12}),\n    ...drawAbsLine({x: bc.x5, y: bc.y11}),\n    ...drawAbsLine({x: bc.x6, y: bc.y8}),\n    ...drawAbsBez({x: bc.x6, y: bc.y7}, {x: bc.x2, y: bc.y7}),\n    ...drawAbsBez({x: bc.x4, y: bc.y5}, {x: bc.x3, y: bc.y4}),\n    ...drawAbsLine({x: bc.x1, y: bc.y2}),\n    ...drawAbsLine({x: bc.x0, y: bc.y0}),\n\n    // Add waist dart\n    ...absMovePen({x: bc.x3, y: bc.y4}),\n    ...drawAbsLine({x: bc.x9, y: bc.y3}),\n    ...drawAbsLine({x: bc.x12, y: bc.y2}),\n    ...drawAbsLine({x: bc.x14, y: bc.y3}),\n    ...drawAbsLine({x: bc.x16, y: bc.y3}),\n\n    // Join shoulder dart and waist dart\n    ...absMovePen({x: bc.x11, y: bc.y9}),\n    ...drawAbsLine({x: bc.x11, y: bc.y6}),\n    ...drawAbsLine({x: bc.x9, y: bc.y3}),\n    ...absMovePen({x: bc.x11, y: bc.y6}),\n    ...drawAbsLine({x: bc.x14, y: bc.y3}),\n\n    // Draw line from waist dart to bottom\n    ...absMovePen({x: bc.x12, y: bc.y2}),\n    ...drawAbsLine({x: bc.x12, y: bc.y0}),\n    ]\n\n  return backPath;\n}\n\nexport const calculateFrontCoordinates = (measurements, convertedMeasurements) => {\n  const cm = convertedMeasurements;\n  const waistDartWidth = calculateWaistDart(get(\"waist\", measurements).measurement, get(\"lowHip\", measurements).measurement);\n  const shoulderDartWidth = calculateArmholeShoulderCenterFrontDart(cm.cup);\n  const sideDartWidth = calculateSideDart(cm.cup);\n  const highHipFromBottom = cm.hip.low.depth - cm.hip.high.depth;\n  let front = {};\n  front.x0 = 0;\n  front.x1 = cm.neck.front + SHOULDERDARTMOVE;\n  front.x2 = (cm.figureBreadth - waistDartWidth)/2;\n  const originalShoulderHeight = (cm.neck.front + 1/8)/2;\n  const originalShoulderWidth = Math.sqrt(Math.pow(cm.shoulder + shoulderDartWidth, 2) - Math.pow(originalShoulderHeight, 2));\n  front.x5 = cm.figureBreadth/2;\n  front.x6 = (cm.figureBreadth + waistDartWidth)/2;\n  front.x10 = cm.cross.front + shoulderDartWidth + 1/8;\n  front.x13 = cm.waist.back + waistDartWidth + EASE;\n  front.x18 = cm.bust.front;\n  front.x19 = cm.hip.high.back + EASE;\n  front.x20 = cm.hip.low.back + EASE;\n  front.y0 = 0;\n  front.y1 = highHipFromBottom;\n  front.y2 = cm.hip.low.depth - 1/2;\n  front.y3 = cm.hip.low.depth;\n  front.y5 = cm.hip.low.depth + 3;\n  front.y14 = cm.hip.low.depth + cm.length.front - 3/8;\n  front.y18 = cm.hip.low.depth + cm.length.front + cm.neck.front + 1/8;\n  front.x16 = front.x13;\n  let sideHeight = Math.sqrt(Math.pow(cm.side + sideDartWidth, 2) - Math.pow(front.x18 - front.x13, 2));\n  front.y9 = cm.hip.low.depth + sideHeight;\n  front.y12 = front.y14 - 3;\n  const armholeCenterY = front.y9 + (front.y12 - front.y9)/2;\n  front.y10 = armholeCenterY - sideDartWidth/(2*Math.sqrt(2));\n  front.y11 = armholeCenterY + sideDartWidth/(2*Math.sqrt(2));\n  front.x11 = calculateLineToBezierIntersection({x: -100, y: front.y11},\n                                                {x: 100, y: front.y11},\n                                                {x: front.x18, y: front.y9},\n                                                {x: front.x10, y: front.y9},\n                                                {x: front.x10, y: front.y12}).x;\n  front.x12 = calculateLineToBezierIntersection({x: -100, y: front.y10},\n                                                {x: 100, y: front.y10},\n                                                {x: front.x18, y: front.y9},\n                                                {x: front.x10, y: front.y9},\n                                                {x: front.x10, y: front.y12}).x;\n  const armholeBottomLength = quadraticBezierLength({x: front.x18, y: front.y9},\n                                                    {x: front.x10, y: front.y9},\n                                                    {x: front.x10, y: front.y12});\n  const shoulderBottomPoint = calculateCoordAlongLine({x: front.x10, y: front.y12},\n                                                      {x: front.x1 + originalShoulderWidth, y: front.y18 - originalShoulderHeight},\n                                                      cm.armhole.back - armholeBottomLength);\n  front.y15 = shoulderBottomPoint.y;\n  front.x14 = shoulderBottomPoint.x;\n  const newShoulderLength = Math.sqrt(Math.pow(front.x14-front.x1, 2) + Math.pow(front.y15-front.y18, 2)) + shoulderDartWidth;\n  const shoulderBottomDart = calculateCoordAlongLine({x: front.x14, y: front.y15},\n                                                     {x: front.x1, y: front.y18},\n                                                      (newShoulderLength - shoulderDartWidth)/2);\n  const shoulderTopDart = calculateCoordAlongLine({x: front.x14, y: front.y15},\n                                                  {x: front.x1, y: front.y18},\n                                                  (newShoulderLength + shoulderDartWidth)/2);\n  front.y17 = shoulderTopDart.y;\n  front.y13 = front.y17 - 3;\n  front.y7 = front.y14 - Math.sqrt(Math.pow(cm.figureLength, 2) - Math.pow(cm.figureBreadth/2, 2));\n  front.x17 = calculateLineToBezierIntersection({x: -100, y: front.y7 + sideDartWidth/2},\n                                         {x: 100, y: front.y7 + sideDartWidth/2},\n                                         {x: front.x13, y: front.y3},\n                                         {x: front.x16, y: front.y5},\n                                         {x: front.x18, y: front.y9}).x;\n  front.y16 = shoulderBottomDart.y;\n  front.x3 = shoulderTopDart.x;\n  front.x8 = shoulderBottomDart.x;\n  front.x9 = front.x8;\n  front.x4 = calculateLineToLineIntersection({x: front.x5, y: front.y7},\n                                             {x: front.x3, y: front.y17},\n                                             {x: -100, y: front.y12},\n                                             {x: 100, y: front.y12}).x;\n  front.x7 = calculateLineToLineIntersection({x: front.x5, y: front.y7},\n                                             {x: front.x8, y: front.y16},\n                                             {x: -100, y: front.y12},\n                                             {x: 100, y: front.y12}).x;\n  front.x15 = calculateLineToBezierIntersection({x: -100, y: front.y7 - sideDartWidth/2},\n                                             {x: 100, y: front.y7 - sideDartWidth/2},\n                                             {x: front.x13, y: front.y3},\n                                             {x: front.x16, y: front.y5},\n                                             {x: front.x18, y: front.y9}).x;\n  front.y4 = front.y7 - 3/4;\n  front.y6 = -calculateLineToBezierIntersection({x: -100, y: front.y7 - sideDartWidth/2},\n                                             {x: 100, y: front.y7 - sideDartWidth/2},\n                                             {x: front.x13, y: front.y3},\n                                             {x: front.x16, y: front.y5},\n                                             {x: front.x18, y: front.y9}).y;\n\n  front.y8 = -calculateLineToBezierIntersection({x: -100, y: front.y7 + sideDartWidth/2},\n                                             {x: 100, y: front.y7 + sideDartWidth/2},\n                                             {x: front.x13, y: front.y3},\n                                             {x: front.x16, y: front.y5},\n                                             {x: front.x18, y: front.y9}).y;\n  return front;\n}\n\nexport const calculateBackCoordinates = (measurements, convertedMeasurements) => {\n  const cm = convertedMeasurements;\n  const waistDartWidth = calculateWaistDart(get(\"waist\", measurements).measurement, get(\"lowHip\", measurements).measurement);\n  const shoulderDartWidth = calculateArmholeShoulderCenterFrontDart(cm.cup);\n  const highHipFromBottom = cm.hip.low.depth - cm.hip.high.depth;\n  let back = {}\n  back.x0 = cm.hip.low.back + EASE;\n  back.x2 = cm.bust.back + EASE;\n  const originalShoulderHeight = 1;\n  const originalShoulderWidth = Math.sqrt(Math.pow(cm.shoulder + shoulderDartWidth, 2) - Math.pow(originalShoulderHeight, 2));\n  back.x3 = cm.waist.back + waistDartWidth + EASE;\n  back.x6 = cm.cross.back + 1/4;\n  back.x9 = WAISTSHAPING + (cm.waist.back + waistDartWidth)/2;\n  back.x12 = WAISTSHAPING + cm.waist.back/2;\n  back.x14 = WAISTSHAPING + (cm.waist.back - waistDartWidth)/2;\n  back.x15 = cm.neck.back + shoulderDartWidth;\n  back.x16 = WAISTSHAPING;\n  back.x18 = 0;\n  back.y0 = 0;\n  back.y1 = cm.hip.low.depth - 7;\n  back.y2 = highHipFromBottom;\n  back.y3 = cm.hip.low.depth;\n  back.y4 = cm.hip.low.depth + 1/2;\n  back.y5 = cm.hip.low.depth + 3;\n  back.y10 = cm.hip.low.depth + cm.length.back - 1/8;\n  back.y14 = back.y10 + 1;\n  back.y7 = cm.hip.low.depth + Math.sqrt(Math.pow(cm.side, 2) - Math.pow(back.x3 - back.x2, 2)) - 3/4;\n  back.y8 = back.y7 + cm.length.back/4;\n  back.y6 = back.y7 - 1;\n  const armholeBottomLength = quadraticBezierLength({x: back.x2, y: back.y7},\n                                                    {x: back.x6, y: back.y7},\n                                                    {x: back.x6, y: back.y8});\n  const shoulderBottomPoint = calculateCoordAlongLine({x: back.x6, y: back.y8},\n                                                      {x: back.x15 + originalShoulderWidth, y: back.y14 - originalShoulderHeight},\n                                                      cm.armhole.back - armholeBottomLength);\n  back.x5 = shoulderBottomPoint.x + 1/4;\n  back.y11 = shoulderBottomPoint.y;\n  const newShoulderLength = Math.sqrt(Math.pow(back.x15-back.x5, 2) + Math.pow(back.y14-back.y11, 2)) + shoulderDartWidth;\n  const shoulderBottomDart = calculateCoordAlongLine({x: back.x5, y: back.y11},\n                                                     {x: back.x15, y: back.y14},\n                                                      (newShoulderLength - shoulderDartWidth)/2);\n  const shoulderTopDart = calculateCoordAlongLine({x: back.x5, y: back.y11},\n                                                  {x: back.x15, y: back.y14},\n                                                  (newShoulderLength + shoulderDartWidth)/2);\n  back.x11 = shoulderTopDart.x;\n  back.x8 = back.x11 + 1/4;\n  back.y12 = shoulderBottomDart.y;\n  back.y13 = shoulderTopDart.y;\n  back.y9 = back.y13 - 3.5;\n  back.x7 = shoulderBottomDart.x + 1/4;\n  back.x4 = back.x3 - 1/8;\n  back.x17 = calculateLineToLineIntersection({x: back.x16, y: back.y3},\n                                             {x: back.x18, y: back.y1},\n                                             {x: -100, y: back.y2},\n                                             {x: 100, y: back.y2}).x;\n  back.x1 = cm.hip.high.back + back.x17 + EASE;\n  return back;\n}","import 'App.css';\nimport { a4 } from '..//constants';\nimport * as jsPDF  from 'jspdf'\nimport * as canvg  from 'canvg'\nimport _ from 'lodash';\n\nexport const _createCanvasElement = (canvasWidth, canvasHeight, scaleFactor) => {\n  var svg = document.getElementById('PatternDisplay').innerHTML;\n  var canvas = document.createElement('canvas');\n  canvas.width = canvasWidth;\n  canvas.height = canvasHeight;\n  // This function makes the canvas only as big as the svg\n  canvg(canvas, svg);\n  const width = canvas.width/scaleFactor\n  const height = canvas.height/scaleFactor;\n  const image = canvas.toDataURL('image/png');\n  return {width: width, height: height, image: image};\n}\n\nexport const _initializeDoc = () => {\n  const orientation = 'p'; // portrait ('p') or landscape ('l')\n  const unit = 'in'; // points ('pt'), 'mm', 'cm', 'in'\n  const format = 'a4'; // 'a3', 'a4','a5' ,'letter' ,'legal'\n  return new jsPDF(orientation, unit, format);\n}\n\nexport const _addPreviewPage = (doc, canvas) => {\n  doc.setTextColor(150, 147, 155);\n  doc.setFontSize(80)\n  doc.text(.75, 4, 'Bodice Sloper')\n  doc.setFontSize(33)\n  doc.setTextColor(117, 188, 198);\n  doc.text(2, 5, 'www.easysloper.com')\n}\n\nexport const _addPatternPage = (doc, canvas, topLeftX, topLeftY, heightPage, widthPage) => {\n  doc.addPage();\n  doc.addImage(canvas.image, 'PNG', topLeftX, topLeftY, canvas.width, canvas.height);\n  doc.setFontSize(30)\n  doc.setTextColor(117, 188, 198);\n  doc.text(1, 2, 'Row: ' + heightPage)\n  doc.text(1, 3, 'Column: ' + widthPage)\n}\n\nexport const _calculatePatternPageInitialValues = (canvas) => {\n  const numberHeightPages = Math.ceil(canvas.height / a4.height);\n  const numberWidthPages = Math.ceil(canvas.width / a4.width);\n  let topLeftX = (numberWidthPages * a4.width - canvas.width) / 2;\n  let topLeftY = (numberHeightPages * a4.height - canvas.height) / 2;\n  return {numberHeightPages: numberHeightPages,\n          numberWidthPages: numberWidthPages,\n          topLeftX: topLeftX,\n          topLeftY: topLeftY\n        };\n}\n\nexport const _calculateNewTopLeftCoordinates = (initialVals, heightPage, widthPage) => {\n  const x = initialVals.topLeftX - (a4.width * heightPage);\n  const y = initialVals.topLeftY - (a4.height * widthPage);\n  return {x: x, y: y};\n}\n\nexport const _generatePatternPages = (doc, canvas, initialVals, pdfTitle) => {\n  _.times(initialVals.numberHeightPages, (heightPage) => {\n    _.times(initialVals.numberWidthPages, (widthPage) => {\n      let topLeftCoordinates = _calculateNewTopLeftCoordinates(initialVals, heightPage, widthPage);\n      _addPatternPage(doc, canvas, topLeftCoordinates.x, topLeftCoordinates.y, heightPage, widthPage)\n    });\n  });\n  doc.save(pdfTitle + \".pdf\");\n}","import React, { Component } from 'react';\nimport 'App.css';\nimport { front,\n        back } from 'slopers/bodice.js'\n\nimport { createPathElement,\n         joinPaths,\n         translatePath,\n         getHeight,\n         getWidth,\n         calculateScaleFactor } from 'svgHelpers/elements'\nimport { _createCanvasElement,\n        _initializeDoc,\n        _addPreviewPage,\n        _calculatePatternPageInitialValues,\n        _generatePatternPages } from 'patternGenerators/printButtonHelpers'\n\nclass GeneratePage extends Component {\n\n  state = {\n    displayWidth: 300,\n    displayHeight: 150,\n  }\n\n  generatePathElement = () => {\n    const sloperPath = this.generatePath();\n    const displayDimensions = {x: this.state.displayWidth, y: this.state.displayHeight};\n    const pathElement = createPathElement('bodiceFront', sloperPath, displayDimensions);\n    return pathElement\n  }\n\n  generatePath = () => {\n    const frontPath = front(this.props.measurements);\n    let backPath = back(this.props.measurements);\n    const backPathWidth = getWidth(backPath);\n    backPath = translatePath(backPath, {x: backPathWidth, y: 0});\n    const sloperPath = joinPaths(frontPath, backPath);\n    return sloperPath;\n  }\n\n  getScaleFactor = () => {\n    // Making this function to call the helper function. Should be named better.\n    // Calling this because you can't set the state from here because this is in the render fn\n    const sloperPath = this.generatePath();\n    const displayDimensions = {x: this.state.displayWidth, y: this.state.displayHeight};\n    return calculateScaleFactor(sloperPath, displayDimensions);\n  }\n\n  calculatePathDimensions = () => {\n    const sloperPath = this.generatePath();\n    const scaleFactor = this.getScaleFactor();\n    const width = getWidth(sloperPath) * scaleFactor;\n    const height = getHeight(sloperPath) * scaleFactor;\n    return {width: width, height: height};\n  }\n\n  componentDidMount() {\n    this.setDisplayHeight()\n  }\n\n  setDisplayHeight = () => {\n    this.setState({displayWidth: this.PatternDisplayElement.clientWidth});\n    this.setState({displayHeight: this.PatternDisplayElement.clientHeight});\n    this.forceUpdate();\n  }\n\n    render () {\n    return (\n      <div className=\"TutorialPage\">\n        <div className=\"TutorialPanel\">\n          <div className=\"DescriptionPanel\">\n            <div className=\"DescriptionTitle\">\n              Your pattern\n            </div>\n            <div className=\"DescriptionText\">\n              Print it out!\n            </div>\n            <div className=\"InputPanel\">\n              <PrintButton measurements={this.props.measurements}\n                           displayWidth={this.state.displayWidth}\n                           displayHeight={this.state.displayHeight}\n                           scaleFactor={this.getScaleFactor()}/>\n              </div>\n              <div className=\"ErrorPanel\">\n              </div>\n            </div>\n            <div className=\"PatternDisplay\" id=\"PatternDisplay\" ref={ (PatternDisplayElement) => this.PatternDisplayElement = PatternDisplayElement}>\n            <svg width={`${this.calculatePathDimensions().width}px`} height={`${this.calculatePathDimensions().height}px`}>\n             {this.generatePathElement() }\n             </svg>\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default GeneratePage;\n\nclass PrintButton extends Component {\n  PrintButtonClicked = (event) => {\n\n    const canvas = _createCanvasElement(this.props.displayWidth,\n                                       this.props.displayHeight,\n                                       this.props.scaleFactor);\n    const initialVals = _calculatePatternPageInitialValues(canvas);\n    const doc = _initializeDoc();\n    const pdfTitle = \"sewing\"\n    _addPreviewPage(doc, canvas);\n    _generatePatternPages(doc, canvas, initialVals, pdfTitle);\n\n  }\n\n  render () {\n    return (\n      <div className=\"CuteButton PrintBtn\" onClick={this.PrintButtonClicked}>\n          Download PDF\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { get_measurements } from 'constants.js';\nimport { isPositiveValidNumber,\n        brokePattern } from 'measurementHelpers.js';\nimport { front,\n        back } from 'slopers/bodice.js'\n\nclass TutorialPage extends Component {\n\n  state = {\n      measurementIndex: 0,\n      measurements: get_measurements({use_defaults: false}),\n      testMeasurements: get_measurements({}),\n      measurementError: '',\n      displayText: '1'\n  }\n\n  updateMeasurement = (value) => {\n    let newMeasurement = this.state.measurements;\n    newMeasurement[this.state.measurementIndex].measurement = parseFloat(value);\n    this.setState({measurements: newMeasurement});\n  }\n\n  updateTestMeasurement = (value) => {\n    let newMeasurement = this.state.testMeasurements;\n    newMeasurement[this.state.measurementIndex].measurement = parseFloat(value);\n    this.setState({testMeasurements: newMeasurement});\n  }\n\n  advanceTutorial = () => {\n    let newMeasurementIndex = this.state.measurementIndex + 1;\n    let newMeasurement = this.state.measurements;\n    this.setState({measurementIndex: newMeasurementIndex,\n                  displayText: `${this.state.measurements[newMeasurementIndex].measurement} inches`\n                });\n  }\n\n  handleChange = (event) => {\n    this.setState({displayText: event.currentTarget.value});\n  }\n\n  handleFocus = () => {\n    this.setState({displayText: ''});\n    console.log(this.getCurrentMeasurement().friendlyName)\n          console.log(this.getCurrentMeasurement().measurement)\n  }\n\n  handleNextClick = () => {\n    let input = this.state.displayText.replace(\" inches\", \"\")\n    if (!isPositiveValidNumber(input)) {\n      this.setState({measurementError: 'Make sure you enter a valid measurement in inches!'});\n    } else {\n        this.setState({measurementError: ''});\n        const oldTestMeasurement = this.state.testMeasurements[this.state.measurementIndex].measurement\n        this.updateTestMeasurement(input);\n        if (brokePattern(this.state.testMeasurements)) {\n          this.updateTestMeasurement(oldTestMeasurement);\n          this.setState({measurementError: 'Hm, something went wrong with this measurement! Sorry, I\\'m still working on making this site work... but feel free to email easysloper@gmail.com with suggestions!!'});\n        } else {\n          this.updateMeasurement(input);\n          this.advanceTutorial();\n        }\n      }\n    }\n\n  handleBackClick = () => {\n    let newMeasurementIndex = this.state.measurementIndex - 1;\n    this.setState({measurementIndex: newMeasurementIndex,\n                  displayText: `${this.state.measurements[newMeasurementIndex].measurement} inches`,\n                  measurementError: ''})\n  }\n\n  showFinishButton = () => {\n    return this.state.measurementIndex === this.state.measurements.length - 1;\n  }\n\n  showBackButton = () => {\n    return this.state.measurementIndex !== 0;\n  }\n\n  generatePattern = (event) => {\n    this.props.history.replace('/generatePattern')\n  }\n\n  getCurrentMeasurement = () => {\n    return this.state.measurements[this.state.measurementIndex]\n  }\n\n  render () {\n    return (\n      <div className=\"TutorialPage\">\n        <div className=\"TutorialPanel\">\n          <div className=\"DescriptionPanel\">\n            { this.state.measurementIndex > 0 && <div className=\"DescriptionTitle\"> { this.getCurrentMeasurement().friendlyName } ({this.state.measurementIndex} / {this.state.measurements.length - 1})</div> }\n            <div className=\"DescriptionText\">\n              { this.getCurrentMeasurement().helpText }\n            </div>\n            <div className=\"InputPanel\">\n              { this.state.measurementIndex > 0 && <input\n                className=\"MeasurementInput\"\n                onFocus={this.handleFocus}\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"value\"\n                value= {this.state.displayText}\n              /> }\n              { this.showBackButton() && <div className=\"CuteButton BackBtn\" onClick={ this.handleBackClick }>&#9664;</div> }\n              { !this.showFinishButton() && <div className=\"CuteButton NextBtn\" onClick={ this.handleNextClick }>&#9654;</div> }\n              { this.showFinishButton() && <div className=\"CuteButton FinishBtn\" onClick={ this.generatePattern }>&#x2714;</div> }\n            </div>\n            <div className=\"ErrorPanel\">\n            { this.state.measurementError }\n            </div>\n          </div>\n          <img className=\"MeasurementImage\" src={ this.getCurrentMeasurement().image } alt=\"instruction\"/>\n          </div>\n      </div>\n    )\n  }\n}\nexport default TutorialPage;","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React, { Component } from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport 'App.css';\nimport titleImage from 'images/title.svg';\nimport GeneratePage from 'patternGenerators/generatePattern.js';\nimport TutorialPage from 'measurementTutorial.js';\nimport history from 'history.js';\nimport { get_measurements } from 'constants.js';\nimport _ from 'lodash';\n\nclass App extends Component {\n  state = {\n    measurements: get_measurements({}),\n  }\n\n  handleLogoClick = (event) => {\n    history.replace('/')\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n        <div className=\"App\">\n          <div className=\"LogoPanel\" onClick={this.handleLogoClick}>\n            <img className=\"TitleImage\" src={titleImage} alt=\"Modsewing\"/>\n          </div>\n          <Route exact path='/' render={(props) =>\n            <TutorialPage history={history} measurements={this.state.measurements}/>}\n          />\n          <Route exact path='/generatePattern' render={(props) =>\n            <GeneratePage measurements={this.state.measurements}/>}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}